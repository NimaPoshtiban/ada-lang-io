"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[7344],{6549:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>A,contentTitle:()=>k,default:()=>T,frontMatter:()=>f,metadata:()=>g,toc:()=>y});var a=n(1716),o=n(3050),r=n(3989),i=n(7318),s=n(4768),c=Object.defineProperty,d=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,h=(e,t,n)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,x=(e,t)=>{for(var n in t||(t={}))m.call(t,n)&&h(e,n,t[n]);if(p)for(var n of p(t))u.call(t,n)&&h(e,n,t[n]);return e};const f={sidebar_position:88},k="11 Exceptions",g={unversionedId:"arm/AA-11/AA-11",id:"arm/AA-11/AA-11",title:"11 Exceptions",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-11/AA-11.mdx",sourceDirName:"arm/AA-11",slug:"/arm/AA-11/",permalink:"/docs/arm/AA-11/",draft:!1,tags:[],version:"current",sidebarPosition:88,frontMatter:{sidebar_position:88},sidebar:"referenceManualSidebar",previous:{title:"10.2 Program Execution",permalink:"/docs/arm/AA-10/AA-10.2"},next:{title:"11.1 Exception Declarations",permalink:"/docs/arm/AA-11/AA-11.1"}},A={},y=[{value:"Wording Changes from Ada 83",id:"wording-changes-from-ada-83",level:4},{value:"Wording Changes from Ada 2005",id:"wording-changes-from-ada-2005",level:4}],b={toc:y};function T(e){var t,n=e,{components:c}=n,h=((e,t)=>{var n={};for(var a in e)m.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=x(x({},b),h),d(t,l({components:c,mdxType:"MDXLayout"}))),(0,a.kt)("h1",x({},{id:"11-exceptions"}),"11 Exceptions"),(0,a.kt)("admonition",x({},{type:"warning"}),(0,a.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,a.kt)("a",x({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,a.kt)(i.Z,{mdxType:"MarginText"},"1/3"),(0,a.kt)(s.Z,{items:["AI05-0299-1"],mdxType:"MarginInfo"}),(0,a.kt)("p",null,"[This clause defines the facilities for dealing with errors or other exceptional situations that arise during program execution.] An ",(0,a.kt)("em",null,"exception")," represents a kind of exceptional situation; an occurrence of such a situation (at run time) is called an ",(0,a.kt)("em",null,"exception occurrence"),". [ To ",(0,a.kt)("em",null,"raise")," an exception is to abandon normal program execution so as to draw attention to the fact that the corresponding situation has arisen. Performing some actions in response to the arising of an exception is called ",(0,a.kt)("em",null,"handling")," the exception. ]",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(i.Z,{mdxType:"MarginText"},"1.a"),(0,a.kt)(o.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},(0,a.kt)("strong",null,"To be honest: "),"...or handling the exception occurrence. ",(0,a.kt)("br",null))),(0,a.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(i.Z,{mdxType:"MarginText"},"1.b"),(0,a.kt)(o.Z,{type:"aarm",aarm:"ramification",mdxType:"Admonition"},(0,a.kt)("strong",null),"For example, an exception End_Error might represent error situations in which an attempt is made to read beyond end-of-file. During the execution of a partition, there might be numerous occurrences of this exception. ",(0,a.kt)("br",null))),(0,a.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(i.Z,{mdxType:"MarginText"},"1.c/5"),(0,a.kt)(s.Z,{items:["AI12-0426-1"],mdxType:"MarginInfo"}),(0,a.kt)(o.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},(0,a.kt)("strong",null,"To be honest: "),"When the meaning is clear from the context, we sometimes use \u201c",(0,a.kt)("em",null,"occurrence"),"\u201d as a shorthand  for \u201cexception occurrence\u201d. ",(0,a.kt)("br",null))),(0,a.kt)(i.Z,{mdxType:"MarginText"},"2"),(0,a.kt)(i.Z,{mdxType:"MarginText"},"3/3"),(0,a.kt)(s.Z,{items:["AI05-0043-1","AI05-0258-1"],mdxType:"MarginInfo"}),(0,a.kt)("p",null,"[An ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-11/AA-11.1#S0303"},"exception_declaration"))," declares a name for an exception. An exception can be raised explicitly (for example, by a ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-11/AA-11.3#S0308"},"raise_statement")),") or implicitly (for example, by the failure of a language-defined check). When an exception arises, control can be transferred to a user-provided ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-11/AA-11.2#S0305"},"exception_handler"))," at the end of a ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-11/AA-11.2#S0304"},"handled_sequence_of_statements")),", or it can be propagated to a dynamically enclosing execution.] ",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)("h4",x({},{id:"wording-changes-from-ada-83"}),"Wording Changes from Ada 83")),(0,a.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(i.Z,{mdxType:"MarginText"},"3.a"),(0,a.kt)(o.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},"We are more explicit about the difference between an exception and an occurrence of an exception. This is necessary because we now have a type (Exception_Occurrence) that represents exception occurrences, so the program can manipulate them. Furthermore, we say that when an exception is propagated, it is the same occurrence that is being propagated (as opposed to a new occurrence of the same exception). The same issue applies to a re-raise statement. In order to understand these semantics, we have to make this distinction. ",(0,a.kt)("br",null))),(0,a.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)("h4",x({},{id:"wording-changes-from-ada-2005"}),"Wording Changes from Ada 2005")),(0,a.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(i.Z,{mdxType:"MarginText"},"3.b/3"),(0,a.kt)(s.Z,{items:["AI05-0043-1"],mdxType:"MarginInfo"}),(0,a.kt)(o.Z,{type:"aarm",aarm:"correction",mdxType:"Admonition"},(0,a.kt)("strong",null)," Generalized the introductory description of how an exception can be raised so that it does not appear to cover all of the cases. ",(0,a.kt)("br",null))))}T.isMDXComponent=!0}}]);