"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[5388],{14180:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>x,contentTitle:()=>g,default:()=>b,frontMatter:()=>A,metadata:()=>y,toc:()=>T});var n=a(91716),l=a(21256),r=a(24895),i=a(28090),o=a(48424),s=a(82262),m=Object.defineProperty,c=Object.defineProperties,p=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,k=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,h=(e,t)=>{for(var a in t||(t={}))k.call(t,a)&&u(e,a,t[a]);if(d)for(var a of d(t))f.call(t,a)&&u(e,a,t[a]);return e};const A={sidebar_position:102},g="12.7 Formal Packages",y={unversionedId:"arm/AA-12/AA-12.7",id:"arm/AA-12/AA-12.7",title:"12.7 Formal Packages",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-12/AA-12.7.mdx",sourceDirName:"arm/AA-12",slug:"/arm/AA-12/AA-12.7",permalink:"/docs/arm/AA-12/AA-12.7",draft:!1,tags:[],version:"current",sidebarPosition:102,frontMatter:{sidebar_position:102},sidebar:"referenceManualSidebar",previous:{title:"12.6 Formal Subprograms",permalink:"/docs/arm/AA-12/AA-12.6"},next:{title:"12.8 Example of a Generic Package",permalink:"/docs/arm/AA-12/AA-12.8"}},x={},T=[{value:"Syntax",id:"syntax",level:4},{value:"Legality Rules",id:"legality-rules",level:4},{value:"Static Semantics",id:"static-semantics",level:4},{value:"Examples",id:"examples",level:4},{value:"Extensions to Ada 83",id:"extensions-to-ada-83",level:4},{value:"Extensions to Ada 95",id:"extensions-to-ada-95",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4},{value:"Incompatibilities With Ada 2005",id:"incompatibilities-with-ada-2005",level:4},{value:"Extensions to Ada 2005",id:"extensions-to-ada-2005",level:4}],_={toc:T};function b(e){var t,a=e,{components:m}=a,u=((e,t)=>{var a={};for(var n in e)k.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&d)for(var n of d(e))t.indexOf(n)<0&&f.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=h(h({},_),u),c(t,p({components:m,mdxType:"MDXLayout"}))),(0,n.kt)("h1",h({},{id:"127-formal-packages"}),"12.7 Formal Packages"),(0,n.kt)("admonition",h({},{type:"warning"}),(0,n.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,n.kt)("a",h({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,n.kt)(o.Z,{mdxType:"MarginText"},"1"),(0,n.kt)("p",null,"[ Formal packages can be used to pass packages to a generic unit. The ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0340"},"formal_package_declaration"))," declares that the formal package is an instance of a given generic package. Upon instantiation, the actual package has to be an instance of that generic package.] ",(0,n.kt)("br",null)),(0,n.kt)("h4",h({},{id:"syntax"}),"Syntax"),(0,n.kt)(o.Z,{mdxType:"MarginText"},"2/3"),(0,n.kt)(s.Z,{items:["AI05-0183-1"],mdxType:"MarginInfo"}),(0,n.kt)(i.Z,{mdxType:"CodeBlock"},(0,n.kt)("code",null,"formal_package_declaration"),(0,n.kt)("a",{id:"S0340"}),(0,n.kt)("code",null," ::= "),(0,n.kt)("br",null),"    ",(0,n.kt)("strong",null,"with")," ",(0,n.kt)("strong",null,"package")," ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-3/AA-3.1#S0022"},"defining_identifier"))," ",(0,n.kt)("strong",null,"is")," ",(0,n.kt)("strong",null,"new")," ",(0,n.kt)("em",null,"generic_package_"),(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-4/AA-4.1#S0091"},"name"))," ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0341"},"formal_package_actual_part")),(0,n.kt)("br",null),"        [",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-13/AA-13.1#S0346"},"aspect_specification")),"];",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"3/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)(i.Z,{mdxType:"CodeBlock"},(0,n.kt)("code",null,"formal_package_actual_part"),(0,n.kt)("a",{id:"S0341"}),(0,n.kt)("code",null," ::= "),(0,n.kt)("br",null),"    ([",(0,n.kt)("strong",null,"others")," =",">","] ","<",">",")",(0,n.kt)("br",null),"  | [",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.3#S0316"},"generic_actual_part")),"]",(0,n.kt)("br",null),"  | (",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association"))," ","{",", ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association")),"}"," [, ",(0,n.kt)("strong",null,"others")," =",">"," ","<",">","])",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"3.1/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)(i.Z,{mdxType:"CodeBlock"},(0,n.kt)("code",null,"formal_package_association"),(0,n.kt)("a",{id:"S0342"}),(0,n.kt)("code",null," ::= "),(0,n.kt)("br",null),"    ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.3#S0317"},"generic_association")),(0,n.kt)("br",null),"  | ",(0,n.kt)("em",null,"generic_formal_parameter_"),(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-4/AA-4.1#S0099"},"selector_name"))," =",">"," ","<",">",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"3.2/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)("p",{class:"Indented2"},"Any positional ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association")),"s shall precede any named ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association")),"s. ",(0,n.kt)("br",null)),(0,n.kt)("h4",h({},{id:"legality-rules"}),"Legality Rules"),(0,n.kt)(o.Z,{mdxType:"MarginText"},"4"),(0,n.kt)("p",null,"The ",(0,n.kt)("em",null,"generic_package_"),(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-4/AA-4.1#S0091"},"name"))," shall denote a generic package (the ",(0,n.kt)("em",null,"template")," for the formal package); the formal package is an instance of the template.",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"4.1/3"),(0,n.kt)(s.Z,{items:["AI05-0025-1"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,"The ",(0,n.kt)("em",null,"generic_formal_parameter_"),(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-4/AA-4.1#S0099"},"selector_name"))," of a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association"))," shall denote a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.1#S0314"},"generic_formal_parameter_declaration"))," of the template. If two or more formal subprograms of the template have the same defining name, then named associations are not allowed for the corresponding actuals.",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"4.2/3"),(0,n.kt)(s.Z,{items:["AI95-00398-01"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,"A ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0341"},"formal_package_actual_part"))," shall contain at most one ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association"))," for each formal parameter. If the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0341"},"formal_package_actual_part"))," does not include \u201c",(0,n.kt)("strong",null,"others")," =",">"," ","<",">","\u201d, each formal parameter without an association shall have a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-3/AA-3.7#S0063"},"default_expression"))," or ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.6#S0338"},"subprogram_default")),".",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"4.3/3"),(0,n.kt)(s.Z,{items:["AI05-0200-1"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,"The rules for matching between ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association")),"s and the generic formals of the template are as follows: ",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"4.4/3"),(0,n.kt)("ul",null,(0,n.kt)("li",null,"If all of the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association")),"s are given by generic associations, the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.3#S0318"},"explicit_generic_actual_parameter")),"s of the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association")),"s shall be legal for an instantiation of the template.",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"4.5/5"),(0,n.kt)(s.Z,{items:["AI05-0200-1"],mdxType:"MarginInfo"}),(0,n.kt)("li",null,"If a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association"))," for a formal type ",(0,n.kt)("em",null,"T")," of the template is given by ","<",">",", then the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0342"},"formal_package_association"))," for any other ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.1#S0314"},"generic_formal_parameter_declaration"))," of the template that mentions ",(0,n.kt)("em",null,"T")," directly or indirectly shall also  be given by ","<",">"," .",(0,n.kt)("br",null))),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"4.a/3"),(0,n.kt)(s.Z,{items:["AI05-0200-1"],mdxType:"MarginInfo"}),(0,n.kt)(l.Z,{type:"aarm",aarm:"discussion",mdxType:"Admonition"},(0,n.kt)("strong",null),"The above rule is simple to state, though it does not reflect the fact that the formal package functions like an instantiation of a special kind, where each box association for a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.1#S0314"},"generic_formal_parameter_declaration"))," ",(0,n.kt)("em",null,"F")," is replaced with a new entity ",(0,n.kt)("em",null,"F"),"' that has the same characteristics as ",(0,n.kt)("em",null,"F"),": if ",(0,n.kt)("em",null,"F")," is a formal discrete type then ",(0,n.kt)("em",null,"F"),"' is a discrete type, if ",(0,n.kt)("em",null,"F")," is a formal subprogram then ",(0,n.kt)("em",null,"F"),"' is a subprogram with a similar signature, etc. In practice this is achieved by making the association into a copy of the declaration of the generic formal.",(0,n.kt)("br",null))),(0,n.kt)(o.Z,{mdxType:"MarginText"},"5/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,"The actual shall be an instance of the template. If the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0341"},"formal_package_actual_part"))," is (","<",">",") or (",(0,n.kt)("strong",null,"others")," =",">"," ","<",">","), [then the actual may be any instance of the template]; otherwise, certain of the actual parameters of the actual instance shall match the corresponding actual parameters of the formal package, determined as follows:",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"5.1/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)("ul",null,(0,n.kt)("li",null,"If the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0341"},"formal_package_actual_part"))," includes ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.3#S0317"},"generic_association")),"s as well as associations with ","<",">",", then only the actual parameters specified explicitly with ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.3#S0317"},"generic_association")),"s are required to match;",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"5.2/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)("li",null,"Otherwise, all actual parameters shall match[, whether any actual parameter is given explicitly or by default]. ",(0,n.kt)("br",null))),(0,n.kt)(o.Z,{mdxType:"MarginText"},"5.3/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,"The rules for matching of actual parameters between the actual instance and the formal package are as follows:",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"6/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)("ul",null,(0,n.kt)("li",null,"For a formal object of mode ",(0,n.kt)("strong",null,"in"),", the actuals match if they are static expressions with the same value, or if they statically denote the same constant, or if they are both the literal ",(0,n.kt)("strong",null,"null"),". ",(0,n.kt)("br",null))),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"6.a"),(0,n.kt)(l.Z,{type:"aarm",aarm:"reason",mdxType:"Admonition"},(0,n.kt)("strong",null),"We can't simply require full conformance between the two actual parameter expressions, because the two expressions are being evaluated at different times. ",(0,n.kt)("br",null))),(0,n.kt)(o.Z,{mdxType:"MarginText"},"7"),(0,n.kt)("ul",null,(0,n.kt)("li",null,"For a formal subtype, the actuals match if they denote statically matching subtypes. ",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"8"),(0,n.kt)("li",null,"For other kinds of formals, the actuals match if they statically denote the same entity. ",(0,n.kt)("br",null))),(0,n.kt)(o.Z,{mdxType:"MarginText"},"8.1/1"),(0,n.kt)(s.Z,{items:["AI95-00213-01"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,"{",(0,n.kt)("em",null,"8652/0039"),"}"," For the purposes of matching, any actual parameter that is the name of a formal object of mode ",(0,n.kt)("strong",null,"in")," is replaced by the formal object's actual expression (recursively). ",(0,n.kt)("br",null)),(0,n.kt)("h4",h({},{id:"static-semantics"}),"Static Semantics"),(0,n.kt)(o.Z,{mdxType:"MarginText"},"9"),(0,n.kt)("p",null,"A ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0340"},"formal_package_declaration"))," declares a generic formal package.",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"10/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,"The visible part of a formal package includes the first list of ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-3/AA-3.11#S0088"},"basic_declarative_item")),"s of the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-7/AA-7.1#S0230"},"package_specification")),". In addition, for each actual parameter that is not required to match, a copy of the declaration of the corresponding formal parameter of the template is included in the visible part of the formal package. If the copied declaration is for a formal type, copies of the implicit declarations of the primitive subprograms of the formal type are also included in the visible part of the formal package.",(0,n.kt)("br",null)),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"10.a/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)(l.Z,{type:"aarm",aarm:"ramification",mdxType:"Admonition"},(0,n.kt)("strong",null),"If the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0341"},"formal_package_actual_part"))," is (","<",">","), then the declarations that occur immediately within the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.1#S0313"},"generic_formal_part"))," of the template for the formal package are visible outside the formal package, and can be denoted by expanded names outside the formal package. If only some of the actual parameters are given by ","<",">",", then the declaration corresponding to those parameters (but not the others) are made visible. ",(0,n.kt)("br",null))),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"10.b/3"),(0,n.kt)(s.Z,{items:["AI05-0005-1"],mdxType:"MarginInfo"}),(0,n.kt)(l.Z,{type:"aarm",aarm:"reason",mdxType:"Admonition"},(0,n.kt)("strong",null),"We always want either the actuals or the formals of an instance to be nameable from outside, but never both. If both were nameable, one would get some funny anomalies since they denote the same entity, but, in the case of types at least, they might have different and inconsistent sets of primitive operators due to predefined operator \u201creemergence\u201d, Formal derived types exacerbate the difference. We want the implicit declarations of the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.1#S0313"},"generic_formal_part"))," as well as the explicit declarations, so we get operations on the formal types. ",(0,n.kt)("br",null))),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"10.c"),(0,n.kt)(l.Z,{type:"aarm",aarm:"ramification",mdxType:"Admonition"},(0,n.kt)("strong",null),"A generic formal package is a package, and is an instance. Hence, it is possible to pass a generic formal package as an actual to another generic formal package. ",(0,n.kt)("br",null))),(0,n.kt)(o.Z,{mdxType:"MarginText"},"11/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,"For the purposes of matching, if the actual instance ",(0,n.kt)("em",null,"A")," is itself a formal package, then the actual parameters of ",(0,n.kt)("em",null,"A")," are those specified explicitly or implicitly in the ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0341"},"formal_package_actual_part"))," for ",(0,n.kt)("em",null,"A"),", plus, for those not specified, the copies of the formal parameters of the template included in the visible part of ",(0,n.kt)("em",null,"A"),".",(0,n.kt)("br",null)),(0,n.kt)("h4",h({},{id:"examples"}),"Examples"),(0,n.kt)(o.Z,{mdxType:"MarginText"},"12/2"),(0,n.kt)(s.Z,{items:["AI95-00433-01"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,(0,n.kt)("em",null,"Example of a generic package with formal package parameters:"),(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"13/2"),(0,n.kt)(i.Z,{language:"ada",mdxType:"CodeBlock"},"with Ada.Containers.Ordered_Maps;  -- see ",(0,n.kt)("a",{href:"../AA-A/AA-A.18#Subclause_A.18.6"},"A.18.6"),"\n","generic","\n","   with package Mapping_1 is new Ada.Containers.Ordered_Maps(","<",">",");","\n","   with package Mapping_2 is new Ada.Containers.Ordered_Maps","\n","                                    (Key_Type =",">"," Mapping_1.Element_Type,","\n","                                     others =",">"," ","<",">",");","\n","package Ordered_Join is","\n",'   -- Provide a "join" between two mappings',"\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"14/2"),"subtype Key_Type is Mapping_1.Key_Type;","\n","   subtype Element_Type is Mapping_2.Element_Type;","\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"15/2"),"function Lookup(Key : Key_Type) return Element_Type;","\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"16/2"),"...","\n","end Ordered_Join;","\n"),(0,n.kt)(o.Z,{mdxType:"MarginText"},"17/2"),(0,n.kt)(s.Z,{items:["AI95-00433-01"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,(0,n.kt)("em",null,"Example of an instantiation of a package with formal packages:"),(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"MarginText"},"18/2"),(0,n.kt)(i.Z,{language:"ada",mdxType:"CodeBlock"},"with Ada.Containers.Ordered_Maps;","\n","package Symbol_Package is","\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"19/5"),(0,n.kt)(s.Z,{items:["AI12-0178-1"],mdxType:"MarginInfo"}),"subtype Key_String is String(1..5);","\n","   type String_Id is ...","\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"20/2"),"type Symbol_Info is ...","\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"21/5"),(0,n.kt)(s.Z,{items:["AI12-0178-1"],mdxType:"MarginInfo"}),"package String_Table is new Ada.Containers.Ordered_Maps","\n","           (Key_Type =",">"," Key_String ,","\n","            Element_Type =",">"," String_Id);","\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"22/2"),"package Symbol_Table is new Ada.Containers.Ordered_Maps","\n","           (Key_Type =",">"," String_Id,","\n","            Element_Type =",">"," Symbol_Info);","\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"23/2"),"package String_Info is new Ordered_Join(Mapping_1 =",">"," String_Table,","\n","                                           Mapping_2 =",">"," Symbol_Table);","\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"24/2"),'Apple_Info : constant Symbol_Info := String_Info.Lookup("Apple");',"\n",(0,n.kt)(o.Z,{mdxType:"MarginText"},"25/2"),"end Symbol_Package;","\n"),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)("h4",h({},{id:"extensions-to-ada-83"}),"Extensions to Ada 83")),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"25.a"),(0,n.kt)(l.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},"Formal packages are new to Ada 95. ",(0,n.kt)("br",null))),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)("h4",h({},{id:"extensions-to-ada-95"}),"Extensions to Ada 95")),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"25.b/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01","AI95-00398-01"],mdxType:"MarginInfo"}),(0,n.kt)(l.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},"It's now allowed to mix actuals of a formal package that are specified with those that are not specified. ",(0,n.kt)("br",null))),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)("h4",h({},{id:"wording-changes-from-ada-95"}),"Wording Changes from Ada 95")),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"25.c/2"),(0,n.kt)(s.Z,{items:["AI95-00213-01"],mdxType:"MarginInfo"}),(0,n.kt)(l.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},"{",(0,n.kt)("em",null,"8652/0039"),"}"," ",(0,n.kt)("strong",null,"Corrigendum:")," Corrected the description of formal package matching to say that formal parameters are always replaced by their actual parameters (recursively). This matches the actual practice of compilers, as the ACATS has always required this behavior.",(0,n.kt)("br",null))),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"25.d/2"),(0,n.kt)(s.Z,{items:["AI95-00317-01"],mdxType:"MarginInfo"}),(0,n.kt)(l.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},"The description of which operations are visible in a formal package has been clarified. We also specify how matching is done when the actual is a formal package. ",(0,n.kt)("br",null))),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)("h4",h({},{id:"incompatibilities-with-ada-2005"}),"Incompatibilities With Ada 2005")),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"25.e/3"),(0,n.kt)(s.Z,{items:["AI05-0025-1","AI05-0200-1"],mdxType:"MarginInfo"}),(0,n.kt)(l.Z,{type:"aarm",aarm:"correction",mdxType:"Admonition"},(0,n.kt)("strong",null)," Added missing rules for parameters of generic formal package that parallel those in ",(0,n.kt)("a",{href:"../AA-12/AA-12.3"},"12.3"),", as well as some specific to ","<",">"," parameters. These are technically incompatibilities because generic formal package parameters that Ada 95 and Ada 2005 would have considered legal now have to be rejected. But this should not be an issue in practice as such formal parameters could not have matched any actual generics. And it is quite likely that implementations already enforce some of these rules. ",(0,n.kt)("br",null))),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)("h4",h({},{id:"extensions-to-ada-2005"}),"Extensions to Ada 2005")),(0,n.kt)(r.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(o.Z,{mdxType:"MarginText"},"25.f/3"),(0,n.kt)(s.Z,{items:["AI05-0183-1"],mdxType:"MarginInfo"}),(0,n.kt)(l.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},"An optional ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-13/AA-13.1#S0346"},"aspect_specification"))," can be used in a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-12/AA-12.7#S0340"},"formal_package_declaration")),". This is described in ",(0,n.kt)("a",{href:"../AA-13/AA-13.1#Subclause_13.1.1"},"13.1.1"),". ",(0,n.kt)("br",null))))}b.isMDXComponent=!0}}]);