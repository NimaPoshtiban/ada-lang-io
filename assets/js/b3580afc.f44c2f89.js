"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[1125],{35317:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var n=a(58168),i=(a(96540),a(15680));const r={title:"6.4 Summary"},o=void 0,s={unversionedId:"style-guide/s6/04",id:"style-guide/s6/04",title:"6.4 Summary",description:"concurrency options",source:"@site/docs/style-guide/s6/04.mdx",sourceDirName:"style-guide/s6",slug:"/style-guide/s6/04",permalink:"/docs/style-guide/s6/04",draft:!1,tags:[],version:"current",frontMatter:{title:"6.4 Summary"},sidebar:"styleGuideSidebar",previous:{title:"6.3 Termination",permalink:"/docs/style-guide/s6/03"},next:{title:"7. Portability",permalink:"/docs/style-guide/s7/"}},l={},u=[{value:"concurrency options",id:"concurrency-options",level:3},{value:"communication",id:"communication",level:3},{value:"termination",id:"termination",level:3}],d={toc:u},c="wrapper";function p(e){let{components:t,...a}=e;return(0,i.yg)(c,(0,n.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h3",{id:"concurrency-options"},"concurrency options"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Consider using protected objects to provide mutually exclusive\naccess to data."),(0,i.yg)("li",{parentName:"ul"},"Consider using protected objects to control or synchronize access to\ndata shared by multiple tasks ."),(0,i.yg)("li",{parentName:"ul"},"Consider using protected objects to implement synchronization, such\nas a passive resource monitor."),(0,i.yg)("li",{parentName:"ul"},"Consider encapsulating protected objects in the private part or body\nof a package."),(0,i.yg)("li",{parentName:"ul"},"Consider using a protected procedure to implement an interrupt\nhandler."),(0,i.yg)("li",{parentName:"ul"},"Do not attach a protected procedure handler to a hardware interrupt\nif that interrupt has a maximum priority greater than the ceiling\npriority assigned to the handler."),(0,i.yg)("li",{parentName:"ul"},"Avoid the use of global variables in entry barriers."),(0,i.yg)("li",{parentName:"ul"},"Avoid the use of barrier expressions with side effects."),(0,i.yg)("li",{parentName:"ul"},"Use tasks to model selected asynchronous threads of control within\nthe problem domain."),(0,i.yg)("li",{parentName:"ul"},"Consider using tasks to define concurrent algorithms."),(0,i.yg)("li",{parentName:"ul"},"Consider using rendezvous when your application requires synchronous\nunbuffered communication."),(0,i.yg)("li",{parentName:"ul"},"Consider using discriminants to minimize the need for an explicit\ninitialization operation (Rationale 1995, \xa79.1)."),(0,i.yg)("li",{parentName:"ul"},"Consider using discriminants to control composite components of the\nprotected objects, including setting the size of an entry family\n(Rationale 1995, \xa79.1)."),(0,i.yg)("li",{parentName:"ul"},"Consider using a discriminant to set the priority of a protected\nobject (Rationale 1995, \xa79.1)."),(0,i.yg)("li",{parentName:"ul"},"Consider using a discriminant to identify an interrupt to a\nprotected object (Rationale 1995, \xa79.1)."),(0,i.yg)("li",{parentName:"ul"},"Consider declaring a task type with a discriminant to indicate\n(Rationale 1995, \xa79.6):",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Priority, storage size, and size of entry families of individual\ntasks of a type"),(0,i.yg)("li",{parentName:"ul"},"Data associated with a task (through an access discriminant)"))),(0,i.yg)("li",{parentName:"ul"},"Consider using single task declarations to declare unique instances\nof concurrent tasks."),(0,i.yg)("li",{parentName:"ul"},"Consider using single protected declarations to declare unique\ninstances of protected objects."),(0,i.yg)("li",{parentName:"ul"},"Minimize dynamic creation of tasks because of the potentially high\nstartup overhead; reuse tasks by having them wait for new work on\nsome appropriate entry queue."),(0,i.yg)("li",{parentName:"ul"},"Do not rely on pragma Priority unless your compiler supports the\nReal-Time Annex (Ada Reference Manual 1995, Annex D) and priority\nscheduling."),(0,i.yg)("li",{parentName:"ul"},"Minimize risk of priority inversion by use of protected objects and\nceiling priority."),(0,i.yg)("li",{parentName:"ul"},"Do not rely upon task priorities to achieve a particular sequence of\ntask execution."),(0,i.yg)("li",{parentName:"ul"},"Do not depend on a particular delay being achievable (Nissen and\nWallis 1984)."),(0,i.yg)("li",{parentName:"ul"},"Use a delay until not a delay statement to delay until a specific\ntime has been reached."),(0,i.yg)("li",{parentName:"ul"},"Avoid using a busy waiting loop instead of a delay."),(0,i.yg)("li",{parentName:"ul"},"Carefully consider the placement of components of protected types\nwithin a tagged type inheritance hierarchy."),(0,i.yg)("li",{parentName:"ul"},"Consider using generics to provide extensibility of data types\nrequiring the restrictions provided by protected objects.")),(0,i.yg)("h3",{id:"communication"},"communication"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Minimize the work performed during a rendezvous ."),(0,i.yg)("li",{parentName:"ul"},"Minimize the work performed in the selective accept loop of a task."),(0,i.yg)("li",{parentName:"ul"},"Consider using protected objects for data synchronization and\ncommunication."),(0,i.yg)("li",{parentName:"ul"},"Provide a handler for exception Program_Error whenever you cannot\navoid a selectiveaccept statement whose alternatives can all be\nclosed (Honeywell 1986)."),(0,i.yg)("li",{parentName:"ul"},"Make systematic use of handlers for Tasking_Error."),(0,i.yg)("li",{parentName:"ul"},"Be prepared to handle exceptions during a rendezvous ."),(0,i.yg)("li",{parentName:"ul"},"Consider using a when others exception handler."),(0,i.yg)("li",{parentName:"ul"},"Do not depend on the values of the task attributes 'Callable or\n'Terminated (Nissen and Wallis 1984)."),(0,i.yg)("li",{parentName:"ul"},"Do not depend on attributes to avoid Tasking_Error on an entry\ncall."),(0,i.yg)("li",{parentName:"ul"},"For tasks, do not depend on the value of the entry attribute 'Count."),(0,i.yg)("li",{parentName:"ul"},"Using the 'Count attribute with protected entries is more reliable\nthan using the 'Count attribute with task entries."),(0,i.yg)("li",{parentName:"ul"},"Use calls on protected subprograms or entries to pass data between\ntasks rather than unprotected shared variables."),(0,i.yg)("li",{parentName:"ul"},"Do not use unprotected shared variables as a task synchronization\ndevice."),(0,i.yg)("li",{parentName:"ul"},"Do not reference nonlocal variables in a guard ."),(0,i.yg)("li",{parentName:"ul"},"If an unprotected shared variable is necessary, use the pragma\nVolatile or Atomic."),(0,i.yg)("li",{parentName:"ul"},"Use caution with conditional entry calls to task entries."),(0,i.yg)("li",{parentName:"ul"},"Use caution with selective accepts with else parts."),(0,i.yg)("li",{parentName:"ul"},"Do not depend upon a particular delay in timed entry calls to task\nentries."),(0,i.yg)("li",{parentName:"ul"},"Do not depend upon a particular delay in selective accepts with\ndelay alternatives."),(0,i.yg)("li",{parentName:"ul"},"Consider using protected objects instead of the rendezvous for\ndata-oriented synchronization."),(0,i.yg)("li",{parentName:"ul"},"Minimize the number of accept and select statements per task ."),(0,i.yg)("li",{parentName:"ul"},"Minimize the number of accept statements per entry.")),(0,i.yg)("h3",{id:"termination"},"termination"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Consider using an exception handler for a rendezvous within the main\nloop inside each task."),(0,i.yg)("li",{parentName:"ul"},"Do not create nonterminating tasks unintentionally."),(0,i.yg)("li",{parentName:"ul"},"Explicitly shut down tasks that depend on library packages."),(0,i.yg)("li",{parentName:"ul"},"Confirm that a task is terminated before freeing it with\nAda.Unchecked_Deallocation."),(0,i.yg)("li",{parentName:"ul"},"Consider using a select statement with a terminate alternative\nrather than an accept statement alone."),(0,i.yg)("li",{parentName:"ul"},"Consider providing a terminate alternative for every selective\naccept that does not require an else part or a delay."),(0,i.yg)("li",{parentName:"ul"},"Do not declare or create a task within a user-defined Finalize\nprocedure after the environment task has finished waiting for other\ntasks."),(0,i.yg)("li",{parentName:"ul"},"Avoid using the abort statement."),(0,i.yg)("li",{parentName:"ul"},"Consider using the asynchronous select statement rather than the\nabort statement."),(0,i.yg)("li",{parentName:"ul"},"Minimize uses of the asynchronous select statement."),(0,i.yg)("li",{parentName:"ul"},"Avoid assigning nonatomic global objects from a task or from the\nabortable part of an asynchronous select statement."),(0,i.yg)("li",{parentName:"ul"},"Place an exception handler for others at the end of a task body."),(0,i.yg)("li",{parentName:"ul"},"Consider having each exception handler at the end of a task body\nreport the task's demise."),(0,i.yg)("li",{parentName:"ul"},"Do not rely on the task status to determine whether a rendezvous can\nbe made with the task."),(0,i.yg)("li",{parentName:"ul"},"Do not call a task entry that directly or indirectly results in a\ncall to an entry of the original calling task."),(0,i.yg)("li",{parentName:"ul"},"Avoid race conditions in setting an exit status code from the main\nprogram when using the procedure\nAda.Command_Line.Set_Exit_Status."),(0,i.yg)("li",{parentName:"ul"},"In a program with multiple tasks, encapsulate, serialize, and check\ncalls to the procedure Ada.Command_Line.Set_Exit_Status.")),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},'This page of the "Ada Quality and Style Guide" has been adapted from the\noriginal work at ',(0,i.yg)("a",{parentName:"p",href:"https://en.wikibooks.org/wiki/Ada_Style_Guide"},"https://en.wikibooks.org/wiki/Ada_Style_Guide"),", which is\nlicensed under the\n",(0,i.yg)("a",{parentName:"p",href:"https://creativecommons.org/licenses/by-sa/3.0/"},"Creative Commons Attribution-ShareAlike License"),";\nadditional terms may apply. Page not endorsed by Wikibooks or the Ada\nStyle Guide Wikibook authors. This page is licensed under the same license\nas the original work.")))}p.isMDXComponent=!0}}]);