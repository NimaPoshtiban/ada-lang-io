"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[1845],{76671:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>y,default:()=>v,frontMatter:()=>A,metadata:()=>h,toc:()=>b});var a=n(91716),r=n(21256),i=n(24895),o=n(48424),s=n(82262),d=Object.defineProperty,m=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,f=(e,t,n)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,g=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&f(e,n,t[n]);if(p)for(var n of p(t))u.call(t,n)&&f(e,n,t[n]);return e};const A={sidebar_position:205},y="J.12 Pragma Interface",h={unversionedId:"arm/AA-J/AA-J.12",id:"arm/AA-J/AA-J.12",title:"J.12 Pragma Interface",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-J/AA-J.12.mdx",sourceDirName:"arm/AA-J",slug:"/arm/AA-J/AA-J.12",permalink:"/docs/arm/AA-J/AA-J.12",draft:!1,tags:[],version:"current",sidebarPosition:205,frontMatter:{sidebar_position:205},sidebar:"referenceManualSidebar",previous:{title:"J.11 The Class Attribute of Untagged Incomplete Types",permalink:"/docs/arm/AA-J/AA-J.11"},next:{title:"J.13 Dependence Restriction Identifiers",permalink:"/docs/arm/AA-J/AA-J.13"}},k={},b=[{value:"Syntax",id:"syntax",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4}],x={toc:b};function v(e){var t,n=e,{components:d}=n,f=((e,t)=>{var n={};for(var a in e)c.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=g(g({},x),f),m(t,l({components:d,mdxType:"MDXLayout"}))),(0,a.kt)("h1",g({},{id:"j12-pragma-interface"}),"J.12 Pragma Interface"),(0,a.kt)("admonition",g({},{type:"warning"}),(0,a.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,a.kt)("a",g({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,a.kt)("h4",g({},{id:"syntax"}),"Syntax"),(0,a.kt)(o.Z,{mdxType:"MarginText"},"1/2"),(0,a.kt)(s.Z,{items:["AI95-00284-02"],mdxType:"MarginInfo"}),(0,a.kt)("p",null,"In addition to an identifier, the reserved word ",(0,a.kt)("strong",null,"interface")," is allowed as a pragma name, to provide compatibility with a prior edition of this Reference Manual. ",(0,a.kt)("br",null)),(0,a.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(o.Z,{mdxType:"MarginText"},"1.a/2"),(0,a.kt)(s.Z,{items:["AI95-00284-02"],mdxType:"MarginInfo"}),(0,a.kt)(r.Z,{type:"aarm",aarm:"implementation-note",mdxType:"Admonition"},(0,a.kt)("strong",null),"All implementations need to at least recognize and ignore this pragma. A syntax error is not an acceptable implementation of this pragma. ",(0,a.kt)("br",null))),(0,a.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)("h4",g({},{id:"wording-changes-from-ada-95"}),"Wording Changes from Ada 95")),(0,a.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(o.Z,{mdxType:"MarginText"},"1.b/3"),(0,a.kt)(s.Z,{items:["AI95-00326-01","AI05-0299-1"],mdxType:"MarginInfo"}),(0,a.kt)(r.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},"This subclause is new. This is necessary as ",(0,a.kt)("strong",null,"interface")," is now a reserved word, which would prevent pragma Interface from being an implementation-defined pragma. We don't define any semantics for this pragma, as we expect that implementations will continue to use whatever they currently implement - requiring any changes would be counter-productive. ",(0,a.kt)("br",null))))}v.isMDXComponent=!0}}]);