"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[7893],{1073:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>h,default:()=>g,frontMatter:()=>p,metadata:()=>A,toc:()=>k});var i=n(1716),a=n(9464),r=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,f=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&u(e,n,t[n]);if(l)for(var n of l(t))d.call(t,n)&&u(e,n,t[n]);return e};const p={sidebar_position:199},h="J.9 The Storage_Size Attribute",A={unversionedId:"arm/AA-J/AA-J.9",id:"arm/AA-J/AA-J.9",title:"J.9 The Storage_Size Attribute",description:"We're still working on the Reference manual output.  Internal links are broken,",source:"@site/docs/arm/AA-J/AA-J.9.mdx",sourceDirName:"arm/AA-J",slug:"/arm/AA-J/AA-J.9",permalink:"/docs/arm/AA-J/AA-J.9",draft:!1,tags:[],version:"current",sidebarPosition:199,frontMatter:{sidebar_position:199},sidebar:"referenceManualSidebar",previous:{title:"J.8 Mod Clauses",permalink:"/docs/arm/AA-J/AA-J.8"},next:{title:"J.10 Specific Suppression of Checks",permalink:"/docs/arm/AA-J/AA-J.10"}},m={},k=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4}],b={toc:k};function g(e){var t,n=e,{components:r}=n,u=((e,t)=>{var n={};for(var i in e)c.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&l)for(var i of l(e))t.indexOf(i)<0&&d.call(e,i)&&(n[i]=e[i]);return n})(n,["components"]);return(0,i.kt)("wrapper",(t=f(f({},b),u),o(t,s({components:r,mdxType:"MDXLayout"}))),(0,i.kt)("h1",f({},{id:"j9-the-storage_size-attribute"}),"J.9 The Storage_Size Attribute"),(0,i.kt)("admonition",f({},{type:"warning"}),(0,i.kt)("p",{parentName:"admonition"},"We're still working on the Reference manual output.  Internal links are broken,\nas are a bunch of other things.\nSee the ",(0,i.kt)("a",f({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,i.kt)("h4",f({},{id:"static-semantics"}),"Static Semantics"),(0,i.kt)("p",null,"For any task subtype T, the following attribute is defined: "),(0,i.kt)("p",null,"T'Storage_Size Denotes an implementation-defined value of type ",(0,i.kt)("em",null,"universal_integer")," representing the number of storage elements reserved for a task of the subtype T. "),(0,i.kt)(a.Z,{type:"note",mdxType:"Admonition"},(0,i.kt)("p",null,(0,i.kt)("strong",null,"To be honest: "),"{",(0,i.kt)("em",null,"AI05-0229-1"),"}"," T'Storage_Size cannot be particularly meaningful in the presence of the specification of the aspect Storage_Size, especially when the expression is dynamic, or depends on a discriminant of the task, because the Storage_Size will be different for different objects of the type. Even without such a specification, the Storage_Size can be different for different objects of the type, and in any case, the value is implementation defined. Hence, it is always implementation defined. ")),(0,i.kt)("p",null,"{",(0,i.kt)("em",null,"AI95-00345-01"),"}"," ","{",(0,i.kt)("em",null,"AI05-0229-1"),"}"," Storage_Size may be specified for a task first subtype that is not an interface via an ",(0,i.kt)("code",null,(0,i.kt)("a",{href:"../AA-13/AA-13.3#S0349"},"attribute_definition_clause")),". When the attribute is specified, the Storage_Size aspect is specified to be the value of the given ",(0,i.kt)("code",null,(0,i.kt)("a",{href:"../AA-4/AA-4.4#S0132"},"expression")),". "),(0,i.kt)(a.Z,{type:"note",mdxType:"Admonition"},(0,i.kt)("p",null,(0,i.kt)("strong",null,"Ramification: "),"{",(0,i.kt)("em",null,"AI05-0229-1"),"}"," When this attribute is specified with an ",(0,i.kt)("code",null,(0,i.kt)("a",{href:"../AA-13/AA-13.3#S0349"},"attribute_definition_clause")),", the associated aspect is set to the ",(0,i.kt)("em",null,"value")," of the ",(0,i.kt)("code",null,(0,i.kt)("a",{href:"../AA-4/AA-4.4#S0132"},"expression"))," given in the ",(0,i.kt)("code",null,(0,i.kt)("a",{href:"../AA-13/AA-13.3#S0349"},"attribute_definition_clause")),", rather than the ",(0,i.kt)("code",null,(0,i.kt)("a",{href:"../AA-4/AA-4.4#S0132"},"expression"))," itself. This value is therefore the same for all objects of the type; in particular, it is not re-evaluated when objects are created. This is different than when the aspect is specified with an ",(0,i.kt)("code",null,(0,i.kt)("a",{href:"../AA-13/AA-13.1#S0346"},"aspect_specification"))," (see 13.3). ")),(0,i.kt)("h4",f({},{id:"wording-changes-from-ada-95"}),"Wording Changes from Ada 95"),(0,i.kt)(a.Z,{type:"note",mdxType:"Admonition"},(0,i.kt)("p",null,"{",(0,i.kt)("em",null,"AI95-00345-01"),"}"," We don't allow specifying Storage_Size on task interfaces. We don't need to mention class-wide task types, because these cannot be a first subtype. ")))}g.isMDXComponent=!0}}]);