"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[85],{8179:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>g,default:()=>T,frontMatter:()=>f,metadata:()=>h,toc:()=>y});var a=n(1716),r=n(8424),i=n(2262),o=Object.defineProperty,s=Object.defineProperties,l=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&c(e,n,t[n]);if(d)for(var n of d(t))u.call(t,n)&&c(e,n,t[n]);return e};const f={sidebar_position:2},g="Foreword",h={unversionedId:"arm/AA-0.1",id:"arm/AA-0.1",title:"Foreword",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-0.1.mdx",sourceDirName:"arm",slug:"/arm/AA-0.1",permalink:"/docs/arm/AA-0.1",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"referenceManualSidebar",previous:{title:"Table of Contents",permalink:"/docs/arm/AA-TOC"},next:{title:"Introduction",permalink:"/docs/arm/AA-0.2"}},k={},y=[],b={toc:y};function T(e){var t,n=e,{components:o}=n,c=((e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&d)for(var a of d(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=m(m({},b),c),s(t,l({components:o,mdxType:"MDXLayout"}))),(0,a.kt)("h1",m({},{id:"foreword"}),"Foreword"),(0,a.kt)("admonition",m({},{type:"warning"}),(0,a.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,a.kt)("a",m({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,a.kt)(r.Z,{mdxType:"MarginText"},"0.1/4"),(0,a.kt)("p",null,"This document is the Annotated Ada Reference Manual. The International Standard for the programming language Ada is ISO/IEC 8652:2012(E). The International Standard is derived from the Ada Reference Manual, with various non-normative changes. In particular, the International Standard omits the annotations and paragraph numbers, eliminates the Acknowledgements, and modifies various front matter such as the Title page and the Foreword. ",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"0.2/4"),(0,a.kt)("p",null,"The Ada Working Group ISO/IEC JTC 1/SC 22/WG 9 is tasked by ISO with the work item to interpret and maintain the International Standard and to produce Technical Corrigenda, as appropriate. The technical work on the International Standard is performed by the Ada Rapporteur Group (ARG) of WG 9.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"0.3/2"),(0,a.kt)("p",null,"AXE Consultants produces the Ada Reference Manual in consultation with the ARG, along with drafts of other documents as needed. ISO/IEC documents often list the individual changes that need to be made to the text of a Standard, rather than simply updating the document. As such, an International Standard is often found in several parts, while the Ada Reference Manual is always a single document.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"0.4/4"),(0,a.kt)("p",null,"In June 2015, WG 9 approved and forwarded Technical Corrigendum 1 to SC 22 for ISO approval, which was granted in December 2015. Technical Corrigendum 1 was published in February 2016.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"0.5/5"),(0,a.kt)("p",null,"In June 2016, WG 9 approved a tentative schedule for the preparation of an Amendment or Revision to the International Standard, with a delivery no earlier than 2018. In July 2019, WG 9 approved an additional review and prototyping period for this revision, extending the delivery to no earlier than late 2020. The draft standard was delivered to WG 9 in July 2021, with publication expected in the summer of 2022. ",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"0.6/5"),(0,a.kt)("p",null,"This version of the Ada Reference Manual shows the current state of Ada 2022. As Ada 2022 is still under development, features are still subject to change .",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"1/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("p",null,"Significant changes in this edition are:",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"2/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("ul",null,(0,a.kt)("li",null,"Improved support for parallel execution is provided via the introduction of parallel loops, parallel blocks, parallel container iteration, and parallel reduction.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"3/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"More precise specification of subprogram interfaces is supported via the new aspects Global, Global'Class, and Nonblocking. The Global aspects, in particular, help to determine whether two constructs can safely execute in parallel.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"4/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"Pre and Post aspects can now be specified for access-to-subprogram types and for generic formal subprograms; a postcondition for the default initialization of a type can be specified using the new Default_Initial_Condition aspect.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"5/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"The behavior of many predefined container operations is now more precisely specified by using pre- and postcondition specifications instead of English descriptions; a restricted (\u201cstable\u201d) view for most containers is introduced to support more efficient iteration.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"6/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"More flexible uses of static expressions are supported via the introduction of static expression functions along with fewer restrictions on static strings.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"7/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"The Image attribute is supported for nonscalar types, and a user-specifiable attribute Put_Image is provided, which determines the value of the Image attribute for a user-defined type.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"8/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"The use of numeric and string literals is generalized to allow their use with other categories of types, via the new aspects Integer_Literal, Real_Literal, and String_Literal.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"9/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"Array and record aggregates are made more flexible: index parameters are allowed in an array aggregate to define the components as a function of their array index; discriminants can be defined more flexibly within an aggregate for a variant record type.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"10/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"New types of aggregates are provided: delta aggregates to allow the construction of a new object by incremental updates to an existing object; container aggregates to allow construction of an object of a container type by directly specifying its elements.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"11/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"A shorthand is provided, using the token '@', to refer to the target of an assignment statement in the expression defining its new value.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"12/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"Declare expressions are provided that permit the definition and use of local constants or renamings, to allow a large expression to be simplified by defining common parts as named entities.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"13/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"Support for lightweight iteration is added via the introduction of procedural iterators.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"14/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"Support for the map-reduce programming strategy is added via the introduction of reduction expressions.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"15/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"For constructs that use iterators of any sort, a filter can be specified that restricts the elements produced by the iteration to those that satisfy the condition of the filter.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"16/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"Predefined packages supporting arbitrary-precision integer and real arithmetic are provided.",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{mdxType:"MarginText"},"17/5"),(0,a.kt)(i.Z,{items:["AI12-0313-1","AI12-0441-1"],mdxType:"MarginInfo"}),(0,a.kt)("li",null,"The Jorvik profile is introduced to support hard real-time applications that want to go beyond the restrictions of the Ravenscar profile.",(0,a.kt)("br",null))))}T.isMDXComponent=!0}}]);