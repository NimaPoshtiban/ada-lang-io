"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[7383],{7901:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(9440),i=(a(6687),a(1716));a(2526);const r={sidebar_position:201},o="J.11  The Class Attribute of Untagged Incomplete Types",s={unversionedId:"arm/AA-J.11",id:"arm/AA-J.11",title:"J.11  The Class Attribute of Untagged Incomplete Types",description:"We're still working on the Reference manual output.  Internal links are broken,",source:"@site/docs/arm/AA-J.11.mdx",sourceDirName:"arm",slug:"/arm/AA-J.11",permalink:"/docs/arm/AA-J.11",draft:!1,tags:[],version:"current",sidebarPosition:201,frontMatter:{sidebar_position:201},sidebar:"tutorialSidebar",previous:{title:"J.10  Specific Suppression of Checks",permalink:"/docs/arm/AA-J.10"},next:{title:"J.12  Pragma Interface",permalink:"/docs/arm/AA-J.12"}},l={},c=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4}],u={toc:c};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"j11--the-class-attribute-of-untagged-incomplete-types"},"J.11  The Class Attribute of Untagged Incomplete Types"),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"We're still working on the Reference manual output.  Internal links are broken,\nas are a bunch of other things.\nSee the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"},"tracking issue"))),(0,i.kt)("h4",{id:"static-semantics"},"Static Semantics"),(0,i.kt)("p",null,"{",(0,i.kt)("em",null,"AI95-00326-01"),"}"," For the first subtype S of a type ",(0,i.kt)("em",null,"T")," declared by an ",(0,i.kt)("code",null,(0,i.kt)("a",{href:"./AA-3.10#S0085"},"incomplete_type_declaration"))," that is not tagged, the following attribute is defined: "),(0,i.kt)("p",null,"{",(0,i.kt)("em",null,"AI95-00326-01"),"}"," S'Class Denotes the first subtype of the incomplete class-wide type rooted at ",(0,i.kt)("em",null,"T"),". The completion of ",(0,i.kt)("em",null,"T")," shall declare a tagged type. Such an attribute reference shall occur in the same library unit as the ",(0,i.kt)("code",null,(0,i.kt)("a",{href:"./AA-3.10#S0085"},"incomplete_type_declaration")),". "),(0,i.kt)("p",null,(0,i.kt)("strong",null,"Reason: "),"{",(0,i.kt)("em",null,"AI95-00326-01"),"}"," This must occur in the same unit to prevent children from imposing requirements on their ancestor library units for deferred incomplete types. "),(0,i.kt)("h4",{id:"wording-changes-from-ada-95"},"Wording Changes from Ada 95"),(0,i.kt)("p",null,"{",(0,i.kt)("em",null,"AI95-00326-01"),"}"," ","{",(0,i.kt)("em",null,"AI05-0299-1"),"}"," This subclause is new. This feature was moved here because the tagged incomplete type provides a better way to provide this capability (it doesn't put requirements on the completion based on uses that could be anywhere). Pity we didn't think of it in 1994. "))}d.isMDXComponent=!0}}]);