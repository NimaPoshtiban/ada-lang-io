"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[9875],{3136:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>g,frontMatter:()=>d,metadata:()=>h,toc:()=>k});var a=i(1716),n=Object.defineProperty,r=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,i)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,f=(e,t)=>{for(var i in t||(t={}))l.call(t,i)&&u(e,i,t[i]);if(s)for(var i of s(t))c.call(t,i)&&u(e,i,t[i]);return e};const d={sidebar_position:199},p="J.9  The Storage_Size Attribute",h={unversionedId:"arm/AA-J.9",id:"arm/AA-J.9",title:"J.9  The Storage_Size Attribute",description:"We're still working on the Reference manual output.  Internal links are broken,",source:"@site/docs/arm/AA-J.9.mdx",sourceDirName:"arm",slug:"/arm/AA-J.9",permalink:"/docs/arm/AA-J.9",draft:!1,tags:[],version:"current",sidebarPosition:199,frontMatter:{sidebar_position:199},sidebar:"tutorialSidebar",previous:{title:"J.8  Mod Clauses",permalink:"/docs/arm/AA-J.8"},next:{title:"J.10  Specific Suppression of Checks",permalink:"/docs/arm/AA-J.10"}},m={},k=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4}],b={toc:k};function g(e){var t,i=e,{components:n}=i,u=((e,t)=>{var i={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(i[a]=e[a]);if(null!=e&&s)for(var a of s(e))t.indexOf(a)<0&&c.call(e,a)&&(i[a]=e[a]);return i})(i,["components"]);return(0,a.kt)("wrapper",(t=f(f({},b),u),r(t,o({components:n,mdxType:"MDXLayout"}))),(0,a.kt)("h1",f({},{id:"j9--the-storage_size-attribute"}),"J.9  The Storage_Size Attribute"),(0,a.kt)("admonition",f({},{type:"warning"}),(0,a.kt)("p",{parentName:"admonition"},"We're still working on the Reference manual output.  Internal links are broken,\nas are a bunch of other things.\nSee the ",(0,a.kt)("a",f({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,a.kt)("h4",f({},{id:"static-semantics"}),"Static Semantics"),(0,a.kt)("p",null,"For any task subtype T, the following attribute is defined: "),(0,a.kt)("p",null,"T'Storage_Size Denotes an implementation-defined value of type ",(0,a.kt)("em",null,"universal_integer")," representing the number of storage elements reserved for a task of the subtype T. "),(0,a.kt)("p",null,(0,a.kt)("strong",null,"To be honest: "),"{",(0,a.kt)("em",null,"AI05-0229-1"),"}"," T'Storage_Size cannot be particularly meaningful in the presence of the specification of the aspect Storage_Size, especially when the expression is dynamic, or depends on a discriminant of the task, because the Storage_Size will be different for different objects of the type. Even without such a specification, the Storage_Size can be different for different objects of the type, and in any case, the value is implementation defined. Hence, it is always implementation defined. "),(0,a.kt)("p",null,"{",(0,a.kt)("em",null,"AI95-00345-01"),"}"," ","{",(0,a.kt)("em",null,"AI05-0229-1"),"}"," Storage_Size may be specified for a task first subtype that is not an interface via an ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-13.3#S0349"},"attribute_definition_clause")),". When the attribute is specified, the Storage_Size aspect is specified to be the value of the given ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-4.4#S0132"},"expression")),". "),(0,a.kt)("p",null,(0,a.kt)("strong",null,"Ramification: "),"{",(0,a.kt)("em",null,"AI05-0229-1"),"}"," When this attribute is specified with an ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-13.3#S0349"},"attribute_definition_clause")),", the associated aspect is set to the ",(0,a.kt)("em",null,"value")," of the ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-4.4#S0132"},"expression"))," given in the ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-13.3#S0349"},"attribute_definition_clause")),", rather than the ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-4.4#S0132"},"expression"))," itself. This value is therefore the same for all objects of the type; in particular, it is not re-evaluated when objects are created. This is different than when the aspect is specified with an ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-13.1#S0346"},"aspect_specification"))," (see 13.3). "),(0,a.kt)("h4",f({},{id:"wording-changes-from-ada-95"}),"Wording Changes from Ada 95"),(0,a.kt)("p",null,"{",(0,a.kt)("em",null,"AI95-00345-01"),"}"," We don't allow specifying Storage_Size on task interfaces. We don't need to mention class-wide task types, because these cannot be a first subtype. "))}g.isMDXComponent=!0}}]);