"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[6659],{29099:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>A,contentTitle:()=>g,default:()=>f,frontMatter:()=>l,metadata:()=>y,toc:()=>c});var a=n(58168),i=(n(96540),n(15680)),r=n(20793),o=n(91435),s=(n(21432),n(79162)),d=n(34421);const l={sidebar_position:202},g="J.9 The Storage_Size Attribute",y={unversionedId:"arm/AA-J/AA-J.9",id:"arm/AA-J/AA-J.9",title:"J.9 The Storage_Size Attribute",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-J/AA-J.9.mdx",sourceDirName:"arm/AA-J",slug:"/arm/AA-J/AA-J.9",permalink:"/docs/arm/AA-J/AA-J.9",draft:!1,tags:[],version:"current",sidebarPosition:202,frontMatter:{sidebar_position:202},sidebar:"referenceManualSidebar",previous:{title:"J.8 Mod Clauses",permalink:"/docs/arm/AA-J/AA-J.8"},next:{title:"J.10 Specific Suppression of Checks",permalink:"/docs/arm/AA-J/AA-J.10"}},A={},c=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4}],p={toc:c},u="wrapper";function f(e){let{components:t,...n}=e;return(0,i.yg)(u,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"j9-the-storage_size-attribute"},"J.9 The Storage_Size Attribute"),(0,i.yg)("admonition",{type:"warning"},(0,i.yg)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"},"tracking issue"))),(0,i.yg)("h4",{id:"static-semantics"},"Static Semantics"),(0,i.yg)(s.A,{mdxType:"MarginText"},"1"),(0,i.yg)("p",null,"For any task subtype T, the following attribute is defined: ",(0,i.yg)("br",null)),(0,i.yg)(s.A,{mdxType:"MarginText"},"2"),(0,i.yg)("dt",null,(0,i.yg)("br",null),"T'Storage_Size "),(0,i.yg)("dl",null,(0,i.yg)("dd",null,"Denotes an implementation-defined value of type ",(0,i.yg)("em",null,"universal_integer")," representing the number of storage elements reserved for a task of the subtype T. ",(0,i.yg)("br",null))),(0,i.yg)(o.A,{mdxType:"AnnotatedOnly"},(0,i.yg)(s.A,{mdxType:"MarginText"},"2.a/3"),(0,i.yg)(d.A,{items:["AI05-0229-1"],mdxType:"MarginInfo"}),(0,i.yg)(r.A,{type:"aarm",aarm:"note",mdxType:"Admonition"},(0,i.yg)("strong",null,"To be honest: "),"T'Storage_Size cannot be particularly meaningful in the presence of the specification of the aspect Storage_Size, especially when the expression is dynamic, or depends on a discriminant of the task, because the Storage_Size will be different for different objects of the type. Even without such a specification, the Storage_Size can be different for different objects of the type, and in any case, the value is implementation defined. Hence, it is always implementation defined. ",(0,i.yg)("br",null))),(0,i.yg)(s.A,{mdxType:"MarginText"},"3/3"),(0,i.yg)(d.A,{items:["AI95-00345-01","AI05-0229-1"],mdxType:"MarginInfo"}),(0,i.yg)("dl",null,(0,i.yg)("dd",null,"Storage_Size may be specified for a task first subtype that is not an interface via an ",(0,i.yg)("code",null,(0,i.yg)("a",{href:"../AA-13/AA-13.3#S0349"},"attribute_definition_clause")),". When the attribute is specified, the Storage_Size aspect is specified to be the value of the given ",(0,i.yg)("code",null,(0,i.yg)("a",{href:"../AA-4/AA-4.4#S0132"},"expression")),". ",(0,i.yg)("br",null))),(0,i.yg)(o.A,{mdxType:"AnnotatedOnly"},(0,i.yg)(s.A,{mdxType:"MarginText"},"3.a/3"),(0,i.yg)(d.A,{items:["AI05-0229-1"],mdxType:"MarginInfo"}),(0,i.yg)(r.A,{type:"aarm",aarm:"ramification",mdxType:"Admonition"},(0,i.yg)("strong",null),"When this attribute is specified with an ",(0,i.yg)("code",null,(0,i.yg)("a",{href:"../AA-13/AA-13.3#S0349"},"attribute_definition_clause")),", the associated aspect is set to the ",(0,i.yg)("em",null,"value")," of the ",(0,i.yg)("code",null,(0,i.yg)("a",{href:"../AA-4/AA-4.4#S0132"},"expression"))," given in the ",(0,i.yg)("code",null,(0,i.yg)("a",{href:"../AA-13/AA-13.3#S0349"},"attribute_definition_clause")),", rather than the ",(0,i.yg)("code",null,(0,i.yg)("a",{href:"../AA-4/AA-4.4#S0132"},"expression"))," itself. This value is therefore the same for all objects of the type; in particular, it is not re-evaluated when objects are created. This is different than when the aspect is specified with an ",(0,i.yg)("code",null,(0,i.yg)("a",{href:"../AA-13/AA-13.1#S0346"},"aspect_specification"))," (see ",(0,i.yg)("a",{href:"../AA-13/AA-13.3"},"13.3"),"). ",(0,i.yg)("br",null))),(0,i.yg)(o.A,{mdxType:"AnnotatedOnly"},(0,i.yg)("h4",{id:"wording-changes-from-ada-95"},"Wording Changes from Ada 95")),(0,i.yg)(o.A,{mdxType:"AnnotatedOnly"},(0,i.yg)(s.A,{mdxType:"MarginText"},"3.b/2"),(0,i.yg)(d.A,{items:["AI95-00345-01"],mdxType:"MarginInfo"}),(0,i.yg)(r.A,{type:"aarm",aarm:"note",mdxType:"Admonition"},"We don't allow specifying Storage_Size on task interfaces. We don't need to mention class-wide task types, because these cannot be a first subtype. ",(0,i.yg)("br",null))))}f.isMDXComponent=!0}}]);