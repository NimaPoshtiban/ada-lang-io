"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[3940],{1716:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(6687);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),f=r,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7541:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(9440),r=(n(6687),n(1716));const o={sidebar_position:207},i="K.1  Language-Defined Aspects",l={unversionedId:"arm/AA-K.1",id:"arm/AA-K.1",title:"K.1  Language-Defined Aspects",description:"{AI05-0299-1} This subclause summarizes the definitions given elsewhere of the language-defined aspects. Aspects are properties of entities that can be specified by the Ada program; unless otherwise specified below, aspects can be specified using an aspect_specification.",source:"@site/docs/arm/AA-K.1.md",sourceDirName:"arm",slug:"/arm/AA-K.1",permalink:"/docs/arm/AA-K.1",draft:!1,tags:[],version:"current",sidebarPosition:207,frontMatter:{sidebar_position:207},sidebar:"tutorialSidebar",previous:{title:"Annex K Language-Defined Aspects and Attributes",permalink:"/docs/arm/AA-Annex K"},next:{title:"K.2  Language-Defined Attributes",permalink:"/docs/arm/AA-K.2"}},s={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"k1--language-defined-aspects"},"K.1  Language-Defined Aspects"),(0,r.kt)("p",null,"{AI05-0229-1} {AI05-0299-1} This subclause summarizes the definitions given elsewhere of the language-defined aspects. Aspects are properties of entities that can be specified by the Ada program; unless otherwise specified below, aspects can be specified using an ",(0,r.kt)("a",{parentName:"p",href:"./AA-13.1#S0346"},"aspect_specification"),"."),(0,r.kt)("p",null,"AddressMachine address of an entity. See 13.3."),(0,r.kt)("p",null,"AggregateMechanism to define user-defined aggregates. See 4.3.5."),(0,r.kt)("p",null,"Alignment (object)Alignment of an object. See 13.3."),(0,r.kt)("p",null,"Alignment (subtype)Alignment of a subtype. See 13.3."),(0,r.kt)("p",null,"All_Calls_RemoteAll indirect or dispatching remote subprogram calls, and all direct remote subprogram calls, should use the Partition Communication Subsystem. See E.2.3."),(0,r.kt)("p",null,"Allows_ExitAn indication of whether a subprogram will operate correctly for arbitrary transfers of control. See 5.5.3."),(0,r.kt)("p",null,"AsynchronousRemote procedure calls are asynchronous; the caller continues without waiting for the call to return. See E.4.1."),(0,r.kt)("p",null,"AtomicDeclare that a type, object, or component is atomic. See C.6."),(0,r.kt)("p",null,"Atomic_ComponentsDeclare that the components of an array type or object are atomic. See C.6."),(0,r.kt)("p",null,"Attach_HandlerProtected procedure is attached to an interrupt. See C.3.1."),(0,r.kt)("p",null,"Bit_OrderOrder of bit numbering in a ",(0,r.kt)("a",{parentName:"p",href:"./AA-13.5#S0352"},"record_representation_clause"),". See 13.5.3."),(0,r.kt)("p",null,"CodingInternal representation of enumeration literals. Specified by an ",(0,r.kt)("a",{parentName:"p",href:"./AA-13.4#S0350"},"enumeration_representation_clause"),", not by an ",(0,r.kt)("a",{parentName:"p",href:"./AA-13.1#S0346"},"aspect_specification"),". See 13.4."),(0,r.kt)("p",null,"Component_SizeSize in bits of a component of an array type. See 13.3."),(0,r.kt)("p",null,"Constant_IndexingDefines function(s) to implement user-defined ",(0,r.kt)("a",{parentName:"p",href:"./AA-4.1#S0096"},"indexed_component"),"s. See 4.1.6."),(0,r.kt)("p",null,"ConventionCalling convention or other convention used for interfacing to other languages. See B.1."),(0,r.kt)("p",null,"CPUProcessor on which a given task, or calling task for a protected operation, should run. See D.16."),(0,r.kt)("p",null,"Default_Component_ValueDefault value for the components of an array-of-scalar subtype. See 3.6."),(0,r.kt)("p",null,"Default_Initial_ConditionA condition that will hold true after the default initialization of an object. See 7.3.3."),(0,r.kt)("p",null,"Default_IteratorDefault iterator to be used in for loops. See 5.5.1."),(0,r.kt)("p",null,"Default_Storage_PoolDefault storage pool for a generic instance. See 13.11.3."),(0,r.kt)("p",null,"Default_ValueDefault value for a scalar subtype. See 3.5."),(0,r.kt)("p",null,"Discard_NamesRequests a reduction in storage for names associated with an entity. See C.5."),(0,r.kt)("p",null,"DispatchingGeneric formal parameters used in the implementation of an entity. See H.7.1."),(0,r.kt)("p",null,"Dispatching_DomainDomain (group of processors) on which a given task should run. See D.16.1."),(0,r.kt)("p",null,"Dynamic_PredicateCondition that will hold true for objects of a given subtype; the subtype is not static. See 3.2.4."),(0,r.kt)("p",null,"Elaborate_BodyA given package will have a body, and that body is elaborated immediately after the declaration. See 10.2.1."),(0,r.kt)("p",null,"Exclusive_FunctionsSpecifies mutual exclusion behavior of protected functions in a protected type. See 9.5.1."),(0,r.kt)("p",null,"ExportEntity is exported to another language. See B.1."),(0,r.kt)("p",null,"External_NameName used to identify an imported or exported entity. See B.1."),(0,r.kt)("p",null,"External_TagUnique identifier for a tagged type in streams. See 13.3."),(0,r.kt)("p",null,"Full_Access_OnlyDeclare that a volatile type, object, or component is full access. See C.6."),(0,r.kt)("p",null,"GlobalGlobal object usage contract. See 6.1.2."),(0,r.kt)("p",null,"Global'ClassGlobal object usage contract inherited on derivation. See 6.1.2."),(0,r.kt)("p",null,"Implicit_DereferenceMechanism for user-defined implicit .all. See 4.1.5."),(0,r.kt)("p",null,"ImportEntity is imported from another language. See B.1."),(0,r.kt)("p",null,"IndependentDeclare that a type, object, or component is independently addressable. See C.6."),(0,r.kt)("p",null,"Independent_ComponentsDeclare that the components of an array or record type, or an array object, are independently addressable. See C.6."),(0,r.kt)("p",null,"InlineFor efficiency, Inline calls are requested for a subprogram. See 6.3.2."),(0,r.kt)("p",null,"InputFunction to read a value from a stream for a given type, including any bounds and discriminants. See 13.13.2."),(0,r.kt)("p",null,"Input'ClassFunction to read a value from a stream for a the class-wide type associated with a given type, including any bounds and discriminants. See 13.13.2."),(0,r.kt)("p",null,"Integer_LiteralDefines a function to implement user-defined integer literals. See 4.2.1."),(0,r.kt)("p",null,"Interrupt_HandlerProtected procedure may be attached to interrupts. See C.3.1."),(0,r.kt)("p",null,"Interrupt_PriorityPriority of a task object or type, or priority of a protected object or type; the priority is in the interrupt range. See D.1."),(0,r.kt)("p",null,"Iterator_ElementElement type to be used for user-defined iterators. See 5.5.1."),(0,r.kt)("p",null,"Iterator_ViewAn alternative type to used for container element iterators. See 5.5.1."),(0,r.kt)("p",null,"Layout (record)Layout of record components. Specified by a ",(0,r.kt)("a",{parentName:"p",href:"./AA-13.5#S0352"},"record_representation_clause"),", not by an ",(0,r.kt)("a",{parentName:"p",href:"./AA-13.1#S0346"},"aspect_specification"),". See 13.5.1."),(0,r.kt)("p",null,"Link_NameLinker symbol used to identify an imported or exported entity. See B.1."),(0,r.kt)("p",null,"Machine_RadixRadix (2 or 10) that is used to represent a decimal fixed point type. See F.1."),(0,r.kt)("p",null,"Max_Entry_Queue_LengthThe maximum entry queue length for a task type, protected type, or entry. See D.4."),(0,r.kt)("p",null,"No_Controlled_PartsA specification that a type and its descendants do not have controlled parts. See H.4.1."),(0,r.kt)("p",null,"No_ReturnA subprogram will not return normally. See 6.5.1."),(0,r.kt)("p",null,"NonblockingSpecifies that an associated subprogram does not block. See 9.5."),(0,r.kt)("p",null,"OutputProcedure to write a value to a stream for a given type, including any bounds and discriminants. See 13.13.2."),(0,r.kt)("p",null,"Output'ClassProcedure to write a value to a stream for a the class-wide type associated with a given type, including any bounds and discriminants. See 13.13.2."),(0,r.kt)("p",null,"PackMinimize storage when laying out records and arrays. See 13.2."),(0,r.kt)("p",null,"Parallel_CallsSpecifies whether a given subprogram is expected to be called in parallel. See 9.10.1."),(0,r.kt)("p",null,"Parallel_IteratorAn indication of whether a subprogram may use multiple threads of control to invoke a loop body procedure. See 5.5.3."),(0,r.kt)("p",null,"PostPostcondition; a condition that will hold true after a call. See 6.1.1."),(0,r.kt)("p",null,"Post'ClassPostcondition that applies to corresponding subprograms of descendant types. See 6.1.1."),(0,r.kt)("p",null,"PrePrecondition; a condition that is expected to hold true before a call. See 6.1.1."),(0,r.kt)("p",null,"Pre'ClassPrecondition that applies to corresponding subprograms of descendant types. See 6.1.1."),(0,r.kt)("p",null,"Predicate_FailureAction to be performed when a predicate check fails. See 3.2.4."),(0,r.kt)("p",null,"Preelaborable_InitializationDeclares that a type has preelaborable initialization. See 10.2.1."),(0,r.kt)("p",null,"PreelaborateCode execution during elaboration is avoided for a given package. See 10.2.1."),(0,r.kt)("p",null,"PriorityPriority of a task object or type, or priority of a protected object or type; the priority is not in the interrupt range. See D.1."),(0,r.kt)("p",null,"PureSide effects are avoided in the subprograms of a given package. See 10.2.1."),(0,r.kt)("p",null,"Put_ImageProcedure to define the image of a given type. See 4.10."),(0,r.kt)("p",null,"ReadProcedure to read a value from a stream for a given type. See 13.13.2."),(0,r.kt)("p",null,"Read'ClassProcedure to read a value from a stream for the class-wide type associated with a given type. See 13.13.2."),(0,r.kt)("p",null,"Real_LiteralDefines a function or functions to implement user-defined real literals. See 4.2.1."),(0,r.kt)("p",null,"Record layoutSee Layout. See 13.5.1."),(0,r.kt)("p",null,"Relative_DeadlineTask or protected type parameter used in Earliest Deadline First Dispatching. See D.2.6."),(0,r.kt)("p",null,"Remote_Call_InterfaceSubprograms in a given package may be used in remote procedure calls. See E.2.3."),(0,r.kt)("p",null,"Remote_TypesTypes in a given package may be used in remote procedure calls. See E.2.2."),(0,r.kt)("p",null,"Shared_PassiveA given package is used to represent shared memory in a distributed system. See E.2.1."),(0,r.kt)("p",null,"Size (object)Size in bits of an object. See 13.3."),(0,r.kt)("p",null,"Size (subtype)Size in bits of a subtype. See 13.3."),(0,r.kt)("p",null,"SmallScale factor for a fixed point type. See 3.5.10."),(0,r.kt)("p",null,"Stable_PropertiesA list of functions describing characteristics that usually are unchanged by primitive operations of the type or an individual primitive subprogram. See 7.3.4."),(0,r.kt)("p",null,"Stable_Properties'ClassA list of functions describing characteristics that usually are unchanged by primitive operations of a class of types or a primitive subprogram for such a class. See 7.3.4."),(0,r.kt)("p",null,"StaticSpecifies that an associated expression function can be used in static expressions. See 6.8."),(0,r.kt)("p",null,"Static_PredicateCondition that will hold true for objects of a given subtype; the subtype may be static. See 3.2.4."),(0,r.kt)("p",null,"Storage_PoolPool of memory from which new will allocate for a given access type. See 13.11."),(0,r.kt)("p",null,"Storage_Size (access)Sets memory size for allocations for an access type. See 13.11."),(0,r.kt)("p",null,"Storage_Size (task)Size in storage elements reserved for a task type or single task object. See 13.3."),(0,r.kt)("p",null,"Stream_SizeSize in bits used to represent elementary objects in a stream. See 13.13.2."),(0,r.kt)("p",null,"String_LiteralDefines a function to implement user-defined string literals. See 4.2.1."),(0,r.kt)("p",null,"SynchronizationDefines whether a given primitive operation of a synchronized interface will be implemented by an entry or protected procedure. See 9.5."),(0,r.kt)("p",null,"Type_InvariantA condition that will hold true for all objects of a type. See 7.3.2."),(0,r.kt)("p",null,"Type_Invariant'ClassA condition that will hold true for all objects in a class of types. See 7.3.2."),(0,r.kt)("p",null,"Unchecked_UnionType is used to interface to a C union type. See B.3.3."),(0,r.kt)("p",null,"Use_FormalGeneric formal parameters used in the implementation of an entity. See H.7.1."),(0,r.kt)("p",null,"Variable_IndexingDefines function(s) to implement user-defined ",(0,r.kt)("a",{parentName:"p",href:"./AA-4.1#S0096"},"indexed_component"),"s. See 4.1.6."),(0,r.kt)("p",null,"VolatileDeclare that a type, object, or component is volatile. See C.6."),(0,r.kt)("p",null,"Volatile_ComponentsDeclare that the components of an array type or object are volatile. See C.6."),(0,r.kt)("p",null,"WriteProcedure to write a value to a stream for a given type. See 13.13.2."),(0,r.kt)("p",null,"Write'ClassProcedure to write a value to a stream for a the class-wide type associated with a given type. See 13.13.2."),(0,r.kt)("p",null,"YieldEnsures that a callable entity includes a task dispatching point. See D.2.1."))}u.isMDXComponent=!0}}]);