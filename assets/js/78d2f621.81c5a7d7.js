"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[6365],{8979:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>f,contentTitle:()=>h,default:()=>A,frontMatter:()=>m,metadata:()=>k,toc:()=>g});var t=r(1716),n=r(7556),i=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,p=(e,a,r)=>a in e?i(e,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[a]=r,u=(e,a)=>{for(var r in a||(a={}))c.call(a,r)&&p(e,r,a[r]);if(s)for(var r of s(a))d.call(a,r)&&p(e,r,a[r]);return e};const m={sidebar_position:11},h="2.5  Character Literals",k={unversionedId:"arm/AA-2.5",id:"arm/AA-2.5",title:"2.5  Character Literals",description:"We're still working on the Reference manual output.  Internal links are broken,",source:"@site/docs/arm/AA-2.5.mdx",sourceDirName:"arm",slug:"/arm/AA-2.5",permalink:"/docs/arm/AA-2.5",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"2.4  Numeric Literals",permalink:"/docs/arm/AA-2.4"},next:{title:"2.6  String Literals",permalink:"/docs/arm/AA-2.6"}},f={},g=[{value:"Syntax",id:"syntax",level:4},{value:"Examples",id:"examples",level:4},{value:"Wording Changes from Ada 83",id:"wording-changes-from-ada-83",level:4}],b={toc:g};function A(e){var a,r=e,{components:i}=r,p=((e,a)=>{var r={};for(var t in e)c.call(e,t)&&a.indexOf(t)<0&&(r[t]=e[t]);if(null!=e&&s)for(var t of s(e))a.indexOf(t)<0&&d.call(e,t)&&(r[t]=e[t]);return r})(r,["components"]);return(0,t.kt)("wrapper",(a=u(u({},b),p),l(a,o({components:i,mdxType:"MDXLayout"}))),(0,t.kt)("h1",u({},{id:"25--character-literals"}),"2.5  Character Literals"),(0,t.kt)("admonition",u({},{type:"warning"}),(0,t.kt)("p",{parentName:"admonition"},"We're still working on the Reference manual output.  Internal links are broken,\nas are a bunch of other things.\nSee the ",(0,t.kt)("a",u({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,t.kt)("p",null,"[A ",(0,t.kt)("code",null,(0,t.kt)("a",{href:"./AA-2.5#S0015"},"character_literal"))," is formed by enclosing a graphic character between two apostrophe characters.] "),(0,t.kt)("h4",u({},{id:"syntax"}),"Syntax"),(0,t.kt)("p",null,(0,t.kt)("code",null,"character_literal"),(0,t.kt)("a",{id:"S0015"}),(0,t.kt)("code",null," ::= "),"'",(0,t.kt)("code",null,"graphic_character"),"'"),(0,t.kt)("p",null,"NOTE 1   A ",(0,t.kt)("code",null,(0,t.kt)("a",{href:"./AA-2.5#S0015"},"character_literal"))," is an enumeration literal of a character type. See 3.5.2. "),(0,t.kt)("h4",u({},{id:"examples"}),"Examples"),(0,t.kt)("p",null,(0,t.kt)("em",null,"Examples of character literals:")," "),(0,t.kt)(n.Z,{mdxType:"CodeBlock"},"{","AI95-00433-01","}"," 'A'     '*'     '''     ' '","\n","'L'     ''     ''    -- Various els.","\n","''     ''            -- Big numbers - infinity and aleph.","\n"),(0,t.kt)("h4",u({},{id:"wording-changes-from-ada-83"}),"Wording Changes from Ada 83"),(0,t.kt)("p",null,"{",(0,t.kt)("em",null,"AI05-0299-1"),"}"," The definitions of the values of literals are in Clauses 3 and 4, rather than here, since it requires knowledge of types. "))}A.isMDXComponent=!0}}]);