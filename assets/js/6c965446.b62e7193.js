"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[7159],{1685:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>y,contentTitle:()=>f,default:()=>T,frontMatter:()=>h,metadata:()=>g,toc:()=>x});var r=t(1716),n=t(3050),i=t(8604),o=t(7318),l=t(4768),s=Object.defineProperty,d=Object.defineProperties,c=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,A=(e,a,t)=>a in e?s(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,k=(e,a)=>{for(var t in a||(a={}))m.call(a,t)&&A(e,t,a[t]);if(p)for(var t of p(a))u.call(a,t)&&A(e,t,a[t]);return e};const h={sidebar_position:13},f="2.5 Character Literals",g={unversionedId:"arm/AA-2/AA-2.5",id:"arm/AA-2/AA-2.5",title:"2.5 Character Literals",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-2/AA-2.5.mdx",sourceDirName:"arm/AA-2",slug:"/arm/AA-2/AA-2.5",permalink:"/docs/arm/AA-2/AA-2.5",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"referenceManualSidebar",previous:{title:"2.4 Numeric Literals",permalink:"/docs/arm/AA-2/AA-2.4"},next:{title:"2.6 String Literals",permalink:"/docs/arm/AA-2/AA-2.6"}},y={},x=[{value:"Syntax",id:"syntax",level:4},{value:"Examples",id:"examples",level:4},{value:"Wording Changes from Ada 83",id:"wording-changes-from-ada-83",level:4}],b={toc:x};function T(e){var a,t=e,{components:s}=t,A=((e,a)=>{var t={};for(var r in e)m.call(e,r)&&a.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&p)for(var r of p(e))a.indexOf(r)<0&&u.call(e,r)&&(t[r]=e[r]);return t})(t,["components"]);return(0,r.kt)("wrapper",(a=k(k({},b),A),d(a,c({components:s,mdxType:"MDXLayout"}))),(0,r.kt)("h1",k({},{id:"25-character-literals"}),"2.5 Character Literals"),(0,r.kt)("admonition",k({},{type:"warning"}),(0,r.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,r.kt)("a",k({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,r.kt)(o.Z,{mdxType:"MarginText"},"1"),(0,r.kt)("p",null,"[A ",(0,r.kt)("code",null,(0,r.kt)("a",{href:"../AA-2/AA-2.5#S0015"},"character_literal"))," is formed by enclosing a graphic character between two apostrophe characters.] ",(0,r.kt)("br",null)),(0,r.kt)("h4",k({},{id:"syntax"}),"Syntax"),(0,r.kt)(o.Z,{mdxType:"MarginText"},"2"),(0,r.kt)(i.Z,{mdxType:"CodeBlock"},(0,r.kt)("code",null,"character_literal"),(0,r.kt)("a",{id:"S0015"}),(0,r.kt)("code",null," ::= "),"'",(0,r.kt)("code",null,"graphic_character"),"'",(0,r.kt)("br",null)),(0,r.kt)(o.Z,{mdxType:"MarginText"},"3"),(0,r.kt)(n.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},"NOTE 1   A ",(0,r.kt)("code",null,(0,r.kt)("a",{href:"../AA-2/AA-2.5#S0015"},"character_literal"))," is an enumeration literal of a character type. See ",(0,r.kt)("a",{href:"../AA-3/AA-3.5#Subclause_3.5.2"},"3.5.2"),". ",(0,r.kt)("br",null)),(0,r.kt)("h4",k({},{id:"examples"}),"Examples"),(0,r.kt)(o.Z,{mdxType:"MarginText"},"4"),(0,r.kt)("p",null,(0,r.kt)("em",null,"Examples of character literals:")," ",(0,r.kt)("br",null)),(0,r.kt)(o.Z,{mdxType:"MarginText"},"5/2"),(0,r.kt)(l.Z,{items:["AI95-00433-01"],mdxType:"MarginInfo"}),(0,r.kt)(i.Z,{language:"ada",mdxType:"CodeBlock"},"'A'     '*'     '''     ' '","\n","'L'     '\u041b'     '\u039b'    -- Various els.","\n","'\u221e'     '\u05d0'            -- Big numbers - infinity and aleph.","\n"),(0,r.kt)("h4",k({},{id:"wording-changes-from-ada-83"}),"Wording Changes from Ada 83"),(0,r.kt)(o.Z,{mdxType:"MarginText"},"5.a/3"),(0,r.kt)(l.Z,{items:["AI05-0299-1"],mdxType:"MarginInfo"}),(0,r.kt)(n.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},"The definitions of the values of literals are in Clauses 3 and 4, rather than here, since it requires knowledge of types. ",(0,r.kt)("br",null)))}T.isMDXComponent=!0}}]);