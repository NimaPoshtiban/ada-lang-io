"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[5229],{1716:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(6687);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7281:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=t(9440),a=(t(6687),t(1716));const o={sidebar_position:95},i="12.2  Generic Bodies",c={unversionedId:"arm/AA-12.2",id:"arm/AA-12.2",title:"12.2  Generic Bodies",description:"The body of a generic unit (a generic body) [is a template for the instance bodies. The syntax of a generic body is identical to that of a nongeneric body].",source:"@site/docs/arm/AA-12.2.md",sourceDirName:"arm",slug:"/arm/AA-12.2",permalink:"/docs/arm/AA-12.2",draft:!1,tags:[],version:"current",sidebarPosition:95,frontMatter:{sidebar_position:95},sidebar:"tutorialSidebar",previous:{title:"12.1  Generic Declarations",permalink:"/docs/arm/AA-12.1"},next:{title:"12.3  Generic Instantiation",permalink:"/docs/arm/AA-12.3"}},l={},s=[{value:"Dynamic Semantics",id:"dynamic-semantics",level:4},{value:"Examples",id:"examples",level:4}],p={toc:s};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"122--generic-bodies"},"12.2  Generic Bodies"),(0,a.kt)("p",null,"The body of a generic unit (a generic body) ","[is a template for the instance bodies. The syntax of a generic body is identical to that of a nongeneric body]",". "),(0,a.kt)("p",null,'Ramification: We also use terms like "generic function body" and "nongeneric package body". '),(0,a.kt)("h4",{id:"dynamic-semantics"},"Dynamic Semantics"),(0,a.kt)("p",null,"The elaboration of a generic body has no other effect than to establish that the generic unit can from then on be instantiated without failing the Elaboration_Check. If the generic body is a child of a generic package, then its elaboration establishes that each corresponding declaration nested in an instance of the parent (see 10.1.1) can from then on be instantiated without failing the Elaboration_Check. "),(0,a.kt)("p",null,"NOTE 1   The syntax of generic subprograms implies that a generic subprogram body is always the completion of a declaration. "),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Example of a generic procedure body: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ada"},"procedure Exchange(U, V : in out Elem) is  -- see 12.1\n   T : Elem;  --  the generic formal type\nbegin\n   T := U;\n   U := V;\n   V := T;\nend Exchange;\n\n")),(0,a.kt)("p",null,"Example of a generic function body: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ada"},'function Squaring(X : Item) return Item is  --  see 12.1\nbegin\n   return X*X;  --  the formal operator "*"\nend Squaring;\n\n')),(0,a.kt)("p",null,"Example of a generic package body: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ada"},"package body On_Vectors is  --  see 12.1\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ada"},"   function Sum(A, B : Vector) return Vector is\n      Result : Vector(A'Range); --  the formal type Vector\n      Bias   : constant Integer := B'First - A'First;\n   begin\n      if A'Length /= B'Length then\n         raise Length_Error;\n      end if;\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ada"},"      for N in A'Range loop\n         Result(N) := Sum(A(N), B(N + Bias)); -- the formal function Sum\n      end loop;\n      return Result;\n   end Sum;\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ada"},"   function Sigma(A : Vector) return Item is\n      Total : Item := A(A'First); --  the formal type Item\n   begin\n      for N in A'First + 1 .. A'Last loop\n         Total := Sum(Total, A(N)); --  the formal function Sum\n      end loop;\n      return Total;\n   end Sigma;\nend On_Vectors;\n\n")))}u.isMDXComponent=!0}}]);