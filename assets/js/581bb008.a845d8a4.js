"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[497],{3548:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>f,contentTitle:()=>b,default:()=>h,frontMatter:()=>c,metadata:()=>p,toc:()=>m});var n=l(1716),r=Object.defineProperty,a=Object.defineProperties,u=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,k=(t,e,l)=>e in t?r(t,e,{enumerable:!0,configurable:!0,writable:!0,value:l}):t[e]=l,s=(t,e)=>{for(var l in e||(e={}))d.call(e,l)&&k(t,l,e[l]);if(o)for(var l of o(e))i.call(e,l)&&k(t,l,e[l]);return t};const c={sidebar_position:207},b="K.1 Language-Defined Aspects",p={unversionedId:"arm/AA-K/AA-K.1",id:"arm/AA-K/AA-K.1",title:"K.1 Language-Defined Aspects",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-K/AA-K.1.mdx",sourceDirName:"arm/AA-K",slug:"/arm/AA-K/AA-K.1",permalink:"/docs/arm/AA-K/AA-K.1",draft:!1,tags:[],version:"current",sidebarPosition:207,frontMatter:{sidebar_position:207},sidebar:"referenceManualSidebar",previous:{title:"Annex K Language-Defined Aspects and Attributes",permalink:"/docs/arm/AA-K/"},next:{title:"K.2 Language-Defined Attributes",permalink:"/docs/arm/AA-K/AA-K.2"}},f={},m=[],y={toc:m};function h(t){var e,l=t,{components:r}=l,k=((t,e)=>{var l={};for(var n in t)d.call(t,n)&&e.indexOf(n)<0&&(l[n]=t[n]);if(null!=t&&o)for(var n of o(t))e.indexOf(n)<0&&i.call(t,n)&&(l[n]=t[n]);return l})(l,["components"]);return(0,n.kt)("wrapper",(e=s(s({},y),k),a(e,u({components:r,mdxType:"MDXLayout"}))),(0,n.kt)("h1",s({},{id:"k1-language-defined-aspects"}),"K.1 Language-Defined Aspects"),(0,n.kt)("admonition",s({},{type:"warning"}),(0,n.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,n.kt)("a",s({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,n.kt)("p",null,"{",(0,n.kt)("em",null,"AI05-0229-1"),"}"," ","{",(0,n.kt)("em",null,"AI05-0299-1"),"}"," ",(0,n.kt)("br",null),"This subclause summarizes the definitions given elsewhere of the language-defined aspects. Aspects are properties of entities that can be specified by the Ada program; unless otherwise specified below, aspects can be specified using an ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-13/AA-13.1#S0346"},"aspect_specification")),".",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Address"),(0,n.kt)("dl",null,(0,n.kt)("dd",null,"Machine address of an entity. See 13.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Aggregate"),(0,n.kt)("dd",null,"Mechanism to define user-defined aggregates. See 4.3.5.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Alignment (object)"),(0,n.kt)("dd",null,"Alignment of an object. See 13.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Alignment (subtype)"),(0,n.kt)("dd",null,"Alignment of a subtype. See 13.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"All_Calls_Remote"),(0,n.kt)("dd",null,"All indirect or dispatching remote subprogram calls, and all direct remote subprogram calls, should use the Partition Communication Subsystem. See E.2.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Allows_Exit"),(0,n.kt)("dd",null,"An indication of whether a subprogram will operate correctly for arbitrary transfers of control. See 5.5.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Asynchronous"),(0,n.kt)("dd",null,"Remote procedure calls are asynchronous; the caller continues without waiting for the call to return. See E.4.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Atomic"),(0,n.kt)("dd",null,"Declare that a type, object, or component is atomic. See C.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Atomic_Components"),(0,n.kt)("dd",null,"Declare that the components of an array type or object are atomic. See C.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Attach_Handler"),(0,n.kt)("dd",null,"Protected procedure is attached to an interrupt. See C.3.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Bit_Order"),(0,n.kt)("dd",null,"Order of bit numbering in a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-13/AA-13.5#S0352"},"record_representation_clause")),". See 13.5.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Coding"),(0,n.kt)("dd",null,"Internal representation of enumeration literals. Specified by an ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-13/AA-13.4#S0350"},"enumeration_representation_clause")),", not by an ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-13/AA-13.1#S0346"},"aspect_specification")),". See 13.4.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Component_Size"),(0,n.kt)("dd",null,"Size in bits of a component of an array type. See 13.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Constant_Indexing"),(0,n.kt)("dd",null,"Defines function(s) to implement user-defined ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-4/AA-4.1#S0096"},"indexed_component")),"s. See 4.1.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Convention"),(0,n.kt)("dd",null,"Calling convention or other convention used for interfacing to other languages. See B.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"CPU"),(0,n.kt)("dd",null,"Processor on which a given task, or calling task for a protected operation, should run. See D.16.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Default_Component_Value"),(0,n.kt)("dd",null,"Default value for the components of an array-of-scalar subtype. See 3.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Default_Initial_Condition"),(0,n.kt)("dd",null,"A condition that will hold true after the default initialization of an object. See 7.3.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Default_Iterator"),(0,n.kt)("dd",null,"Default iterator to be used in ",(0,n.kt)("strong",null,"for")," loops. See 5.5.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Default_Storage_Pool"),(0,n.kt)("dd",null,"Default storage pool for a generic instance. See 13.11.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Default_Value"),(0,n.kt)("dd",null,"Default value for a scalar subtype. See 3.5.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Discard_Names"),(0,n.kt)("dd",null,"Requests a reduction in storage for names associated with an entity. See C.5.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Dispatching"),(0,n.kt)("dd",null,"Generic formal parameters used in the implementation of an entity. See H.7.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Dispatching_Domain"),(0,n.kt)("dd",null,"Domain (group of processors) on which a given task should run. See D.16.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Dynamic_Predicate"),(0,n.kt)("dd",null,"Condition that will hold true for objects of a given subtype; the subtype is not static. See 3.2.4.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Elaborate_Body"),(0,n.kt)("dd",null,"A given package will have a body, and that body is elaborated immediately after the declaration. See 10.2.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Exclusive_Functions"),(0,n.kt)("dd",null,"Specifies mutual exclusion behavior of protected functions in a protected type. See 9.5.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Export"),(0,n.kt)("dd",null,"Entity is exported to another language. See B.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"External_Name"),(0,n.kt)("dd",null,"Name used to identify an imported or exported entity. See B.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"External_Tag"),(0,n.kt)("dd",null,"Unique identifier for a tagged type in streams. See 13.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Full_Access_Only"),(0,n.kt)("dd",null,"Declare that a volatile type, object, or component is full access. See C.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Global"),(0,n.kt)("dd",null,"Global object usage contract. See 6.1.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Global'Class"),(0,n.kt)("dd",null,"Global object usage contract inherited on derivation. See 6.1.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Implicit_Dereference"),(0,n.kt)("dd",null,"Mechanism for user-defined implicit .",(0,n.kt)("strong",null,"all"),". See 4.1.5.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Import"),(0,n.kt)("dd",null,"Entity is imported from another language. See B.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Independent"),(0,n.kt)("dd",null,"Declare that a type, object, or component is independently addressable. See C.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Independent_Components"),(0,n.kt)("dd",null,"Declare that the components of an array or record type, or an array object, are independently addressable. See C.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Inline"),(0,n.kt)("dd",null,"For efficiency, Inline calls are requested for a subprogram. See 6.3.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Input"),(0,n.kt)("dd",null,"Function to read a value from a stream for a given type, including any bounds and discriminants. See 13.13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Input'Class"),(0,n.kt)("dd",null,"Function to read a value from a stream for a the class-wide type associated with a given type, including any bounds and discriminants. See 13.13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Integer_Literal"),(0,n.kt)("dd",null,"Defines a function to implement user-defined integer literals. See 4.2.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Interrupt_Handler"),(0,n.kt)("dd",null,"Protected procedure may be attached to interrupts. See C.3.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Interrupt_Priority"),(0,n.kt)("dd",null,"Priority of a task object or type, or priority of a protected object or type; the priority is in the interrupt range. See D.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Iterator_Element"),(0,n.kt)("dd",null,"Element type to be used for user-defined iterators. See 5.5.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Iterator_View"),(0,n.kt)("dd",null,"An alternative type to used for container element iterators. See 5.5.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Layout (record)"),(0,n.kt)("dd",null,"Layout of record components. Specified by a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-13/AA-13.5#S0352"},"record_representation_clause")),", not by an ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-13/AA-13.1#S0346"},"aspect_specification")),". See 13.5.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Link_Name"),(0,n.kt)("dd",null,"Linker symbol used to identify an imported or exported entity. See B.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Machine_Radix"),(0,n.kt)("dd",null,"Radix (2 or 10) that is used to represent a decimal fixed point type. See F.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Max_Entry_Queue_Length"),(0,n.kt)("dd",null,"The maximum entry queue length for a task type, protected type, or entry. See D.4.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"No_Controlled_Parts"),(0,n.kt)("dd",null,"A specification that a type and its descendants do not have controlled parts. See H.4.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"No_Return"),(0,n.kt)("dd",null,"A subprogram will not return normally. See 6.5.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Nonblocking"),(0,n.kt)("dd",null,"Specifies that an associated subprogram does not block. See 9.5.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Output"),(0,n.kt)("dd",null,"Procedure to write a value to a stream for a given type, including any bounds and discriminants. See 13.13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Output'Class"),(0,n.kt)("dd",null,"Procedure to write a value to a stream for a the class-wide type associated with a given type, including any bounds and discriminants. See 13.13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Pack"),(0,n.kt)("dd",null,"Minimize storage when laying out records and arrays. See 13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Parallel_Calls"),(0,n.kt)("dd",null,"Specifies whether a given subprogram is expected to be called in parallel. See 9.10.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Parallel_Iterator"),(0,n.kt)("dd",null,"An indication of whether a subprogram may use multiple threads of control to invoke a loop body procedure. See 5.5.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Post"),(0,n.kt)("dd",null,"Postcondition; a condition that will hold true after a call. See 6.1.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Post'Class"),(0,n.kt)("dd",null,"Postcondition that applies to corresponding subprograms of descendant types. See 6.1.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Pre"),(0,n.kt)("dd",null,"Precondition; a condition that is expected to hold true before a call. See 6.1.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Pre'Class"),(0,n.kt)("dd",null,"Precondition that applies to corresponding subprograms of descendant types. See 6.1.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Predicate_Failure"),(0,n.kt)("dd",null,"Action to be performed when a predicate check fails. See 3.2.4.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Preelaborable_Initialization"),(0,n.kt)("dd",null,"Declares that a type has preelaborable initialization. See 10.2.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Preelaborate"),(0,n.kt)("dd",null,"Code execution during elaboration is avoided for a given package. See 10.2.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Priority"),(0,n.kt)("dd",null,"Priority of a task object or type, or priority of a protected object or type; the priority is not in the interrupt range. See D.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Pure"),(0,n.kt)("dd",null,"Side effects are avoided in the subprograms of a given package. See 10.2.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Put_Image"),(0,n.kt)("dd",null,"Procedure to define the image of a given type. See 4.10.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Read"),(0,n.kt)("dd",null,"Procedure to read a value from a stream for a given type. See 13.13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Read'Class"),(0,n.kt)("dd",null,"Procedure to read a value from a stream for the class-wide type associated with a given type. See 13.13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Real_Literal"),(0,n.kt)("dd",null,"Defines a function or functions to implement user-defined real literals. See 4.2.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Record layout"),(0,n.kt)("dd",null,"See Layout. See 13.5.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Relative_Deadline"),(0,n.kt)("dd",null,"Task or protected type parameter used in Earliest Deadline First Dispatching. See D.2.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Remote_Call_Interface"),(0,n.kt)("dd",null,"Subprograms in a given package may be used in remote procedure calls. See E.2.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Remote_Types"),(0,n.kt)("dd",null,"Types in a given package may be used in remote procedure calls. See E.2.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Shared_Passive"),(0,n.kt)("dd",null,"A given package is used to represent shared memory in a distributed system. See E.2.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Size (object)"),(0,n.kt)("dd",null,"Size in bits of an object. See 13.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Size (subtype)"),(0,n.kt)("dd",null,"Size in bits of a subtype. See 13.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Small"),(0,n.kt)("dd",null,"Scale factor for a fixed point type. See 3.5.10.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Stable_Properties"),(0,n.kt)("dd",null,"A list of functions describing characteristics that usually are unchanged by primitive operations of the type or an individual primitive subprogram. See 7.3.4.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Stable_Properties'Class"),(0,n.kt)("dd",null,"A list of functions describing characteristics that usually are unchanged by primitive operations of a class of types or a primitive subprogram for such a class. See 7.3.4.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Static"),(0,n.kt)("dd",null,"Specifies that an associated expression function can be used in static expressions. See 6.8.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Static_Predicate"),(0,n.kt)("dd",null,"Condition that will hold true for objects of a given subtype; the subtype may be static. See 3.2.4.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Storage_Pool"),(0,n.kt)("dd",null,"Pool of memory from which ",(0,n.kt)("strong",null,"new")," will allocate for a given access type. See 13.11.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Storage_Size (access)"),(0,n.kt)("dd",null,"Sets memory size for allocations for an access type. See 13.11.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Storage_Size (task)"),(0,n.kt)("dd",null,"Size in storage elements reserved for a task type or single task object. See 13.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Stream_Size"),(0,n.kt)("dd",null,"Size in bits used to represent elementary objects in a stream. See 13.13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"String_Literal"),(0,n.kt)("dd",null,"Defines a function to implement user-defined string literals. See 4.2.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Synchronization"),(0,n.kt)("dd",null,"Defines whether a given primitive operation of a synchronized interface will be implemented by an entry or protected procedure. See 9.5.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Type_Invariant"),(0,n.kt)("dd",null,"A condition that will hold true for all objects of a type. See 7.3.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Type_Invariant'Class"),(0,n.kt)("dd",null,"A condition that will hold true for all objects in a class of types. See 7.3.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Unchecked_Union"),(0,n.kt)("dd",null,"Type is used to interface to a C union type. See B.3.3.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Use_Formal"),(0,n.kt)("dd",null,"Generic formal parameters used in the implementation of an entity. See H.7.1.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Variable_Indexing"),(0,n.kt)("dd",null,"Defines function(s) to implement user-defined ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-4/AA-4.1#S0096"},"indexed_component")),"s. See 4.1.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Volatile"),(0,n.kt)("dd",null,"Declare that a type, object, or component is volatile. See C.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Volatile_Components"),(0,n.kt)("dd",null,"Declare that the components of an array type or object are volatile. See C.6.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Write"),(0,n.kt)("dd",null,"Procedure to write a value to a stream for a given type. See 13.13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Write'Class"),(0,n.kt)("dd",null,"Procedure to write a value to a stream for a the class-wide type associated with a given type. See 13.13.2.",(0,n.kt)("br",null)),(0,n.kt)("dt",null,(0,n.kt)("br",null),"Yield"),(0,n.kt)("dd",null,"Ensures that a callable entity includes a task dispatching point. See D.2.1.",(0,n.kt)("br",null))))}h.isMDXComponent=!0}}]);