"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[7997],{1716:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(6687);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(g,i(i({ref:t},s),{},{components:n})):a.createElement(g,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5129:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(9440),r=(n(6687),n(1716));const o={sidebar_position:187},i="H.5  Pragma Detect_Blocking",l={unversionedId:"arm/AA-H.5",id:"arm/AA-H.5",title:"H.5  Pragma Detect_Blocking",description:"{AI12-0267-1} The following pragma requires an implementation to detect potentially blocking operations during the execution of a protected operation or a parallel construct.",source:"@site/docs/arm/AA-H.5.md",sourceDirName:"arm",slug:"/arm/AA-H.5",permalink:"/docs/arm/AA-H.5",draft:!1,tags:[],version:"current",sidebarPosition:187,frontMatter:{sidebar_position:187},sidebar:"tutorialSidebar",previous:{title:"H.4  High Integrity Restrictions",permalink:"/docs/arm/AA-H.4"},next:{title:"H.6  Pragma Partition_Elaboration_Policy",permalink:"/docs/arm/AA-H.6"}},c={},p=[{value:"Syntax",id:"syntax",level:4},{value:"Post-Compilation Rules",id:"post-compilation-rules",level:4},{value:"Dynamic Semantics",id:"dynamic-semantics",level:4},{value:"Implementation Permissions",id:"implementation-permissions",level:4},{value:"Extensions to Ada 95",id:"extensions-to-ada-95",level:4},{value:"Extensions to Ada 2012",id:"extensions-to-ada-2012",level:4}],s={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"h5--pragma-detect_blocking"},"H.5  Pragma Detect_Blocking"),(0,r.kt)("p",null,"{AI95-00305-01} {AI12-0267-1} The following ",(0,r.kt)("a",{parentName:"p",href:"./AA-2.8#S0019"},"pragma")," requires an implementation to detect potentially blocking operations during the execution of a protected operation or a parallel construct. "),(0,r.kt)("h4",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,"{AI95-00305-01} The form of a ",(0,r.kt)("a",{parentName:"p",href:"./AA-2.8#S0019"},"pragma")," Detect_Blocking is as follows: "),(0,r.kt)("p",null,"  pragma Detect_Blocking; "),(0,r.kt)("h4",{id:"post-compilation-rules"},"Post-Compilation Rules"),(0,r.kt)("p",null,"{AI95-00305-01} A ",(0,r.kt)("a",{parentName:"p",href:"./AA-2.8#S0019"},"pragma")," Detect_Blocking is a configuration pragma. "),(0,r.kt)("h4",{id:"dynamic-semantics"},"Dynamic Semantics"),(0,r.kt)("p",null,"{AI95-00305-01} {AI12-0247-1} {AI12-0267-1} An implementation is required to detect a potentially blocking operation that occurs during the execution of a protected operation or a parallel construct defined within a compilation unit to which the pragma applies, and to raise Program_Error (see 9.5). "),(0,r.kt)("h4",{id:"implementation-permissions"},"Implementation Permissions"),(0,r.kt)("p",null,"{AI95-00305-01} {AI12-0267-1} An implementation is allowed to reject a ",(0,r.kt)("a",{parentName:"p",href:"./AA-10.1#S0286"},"compilation_unit")," to which a pragma Detect_Blocking applies if a potentially blocking operation is present directly within an ",(0,r.kt)("a",{parentName:"p",href:"./AA-9.5#S0260"},"entry_body"),", the body of a protected subprogram, or a parallel construct occurring within the compilation unit. "),(0,r.kt)("p",null,"NOTE 1   {AI95-00305-01} {AI12-0442-1} An operation that causes a task to be blocked within a foreign language domain is not defined to be potentially blocking, and is unlikely to be detected. "),(0,r.kt)("h4",{id:"extensions-to-ada-95"},"Extensions to Ada 95"),(0,r.kt)("p",null,"{AI95-00305-01} Pragma Detect_Blocking is new. "),(0,r.kt)("h4",{id:"extensions-to-ada-2012"},"Extensions to Ada 2012"),(0,r.kt)("p",null,"{AI12-0267-1} Pragma Detect_Blocking now applies to parallel constructs as well as protected actions."))}m.isMDXComponent=!0}}]);