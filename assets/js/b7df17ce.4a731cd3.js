"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[268],{1716:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>f});var a=t(6687);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=a.createContext({}),s=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return a.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=n,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return t?a.createElement(m,i(i({ref:r},p),{},{components:t})):a.createElement(m,i({ref:r},p))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},402:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(9440),n=(t(6687),t(1716));const o={sidebar_position:11},i="2.5  Character Literals",l={unversionedId:"arm/AA-2.5",id:"arm/AA-2.5",title:"2.5  Character Literals",description:"A [character_literal is formed by enclosing a graphic character between two apostrophe characters.]",source:"@site/docs/arm/AA-2.5.md",sourceDirName:"arm",slug:"/arm/AA-2.5",permalink:"/docs/arm/AA-2.5",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"2.4  Numeric Literals",permalink:"/docs/arm/AA-2.4"},next:{title:"2.6  String Literals",permalink:"/docs/arm/AA-2.6"}},c={},s=[{value:"Syntax",id:"syntax",level:4},{value:"Examples",id:"examples",level:4},{value:"Wording Changes from Ada 83",id:"wording-changes-from-ada-83",level:4}],p={toc:s};function u(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"25--character-literals"},"2.5  Character Literals"),(0,n.kt)("p",null,"[A ",(0,n.kt)("a",{parentName:"p",href:"./AA-2.5#S0015"},"character_literal")," is formed by enclosing a graphic character between two apostrophe characters.] "),(0,n.kt)("h4",{id:"syntax"},"Syntax"),(0,n.kt)("p",null,"character_literal",(0,n.kt)("a",{id:"S0015"})," ::= 'graphic_character'"),(0,n.kt)("p",null,"NOTE 1   A ",(0,n.kt)("a",{parentName:"p",href:"./AA-2.5#S0015"},"character_literal")," is an enumeration literal of a character type. See 3.5.2. "),(0,n.kt)("h4",{id:"examples"},"Examples"),(0,n.kt)("p",null,"Examples of character literals: "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ada"},"{AI95-00433-01} 'A'     '*'     '''     ' '\n'L'     ''     ''    -- Various els.\n''     ''            -- Big numbers - infinity and aleph.\n\n")),(0,n.kt)("h4",{id:"wording-changes-from-ada-83"},"Wording Changes from Ada 83"),(0,n.kt)("p",null,"{AI05-0299-1} The definitions of the values of literals are in Clauses 3 and 4, rather than here, since it requires knowledge of types."))}u.isMDXComponent=!0}}]);