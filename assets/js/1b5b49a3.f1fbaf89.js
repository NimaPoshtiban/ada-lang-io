"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[1845],{8285:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>A,default:()=>v,frontMatter:()=>g,metadata:()=>y,toc:()=>b});var n=a(1716),r=a(3050),i=a(7318),o=a(4768),s=Object.defineProperty,l=Object.defineProperties,m=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,f=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&u(e,a,t[a]);if(d)for(var a of d(t))c.call(t,a)&&u(e,a,t[a]);return e};const g={sidebar_position:205},A="J.12 Pragma Interface",y={unversionedId:"arm/AA-J/AA-J.12",id:"arm/AA-J/AA-J.12",title:"J.12 Pragma Interface",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-J/AA-J.12.mdx",sourceDirName:"arm/AA-J",slug:"/arm/AA-J/AA-J.12",permalink:"/docs/arm/AA-J/AA-J.12",draft:!1,tags:[],version:"current",sidebarPosition:205,frontMatter:{sidebar_position:205},sidebar:"referenceManualSidebar",previous:{title:"J.11 The Class Attribute of Untagged Incomplete Types",permalink:"/docs/arm/AA-J/AA-J.11"},next:{title:"J.13 Dependence Restriction Identifiers",permalink:"/docs/arm/AA-J/AA-J.13"}},h={},b=[{value:"Syntax",id:"syntax",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4}],k={toc:b};function v(e){var t,a=e,{components:s}=a,u=((e,t)=>{var a={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&d)for(var n of d(e))t.indexOf(n)<0&&c.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=f(f({},k),u),l(t,m({components:s,mdxType:"MDXLayout"}))),(0,n.kt)("h1",f({},{id:"j12-pragma-interface"}),"J.12 Pragma Interface"),(0,n.kt)("admonition",f({},{type:"warning"}),(0,n.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,n.kt)("a",f({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,n.kt)("h4",f({},{id:"syntax"}),"Syntax"),(0,n.kt)(i.Z,{mdxType:"MarginText"},"1/2"),(0,n.kt)(o.Z,{items:["AI95-00284-02"],mdxType:"MarginInfo"}),(0,n.kt)("p",null,"In addition to an identifier, the reserved word ",(0,n.kt)("strong",null,"interface")," is allowed as a pragma name, to provide compatibility with a prior edition of this Reference Manual. ",(0,n.kt)("br",null)),(0,n.kt)(i.Z,{mdxType:"MarginText"},"1.a/2"),(0,n.kt)(o.Z,{items:["AI95-00284-02"],mdxType:"MarginInfo"}),(0,n.kt)(r.Z,{type:"aarm",aarm:"implementation-note",title:"Implementation Note: ",mdxType:"Admonition"},(0,n.kt)("strong",null),"All implementations need to at least recognize and ignore this pragma. A syntax error is not an acceptable implementation of this pragma. ",(0,n.kt)("br",null)),(0,n.kt)("h4",f({},{id:"wording-changes-from-ada-95"}),"Wording Changes from Ada 95"),(0,n.kt)(i.Z,{mdxType:"MarginText"},"1.b/3"),(0,n.kt)(o.Z,{items:["AI95-00326-01","AI05-0299-1"],mdxType:"MarginInfo"}),(0,n.kt)(r.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},"This subclause is new. This is necessary as ",(0,n.kt)("strong",null,"interface")," is now a reserved word, which would prevent pragma Interface from being an implementation-defined pragma. We don't define any semantics for this pragma, as we expect that implementations will continue to use whatever they currently implement - requiring any changes would be counter-productive. ",(0,n.kt)("br",null)))}v.isMDXComponent=!0}}]);