"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[2227],{41932:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>p,contentTitle:()=>g,default:()=>T,frontMatter:()=>y,metadata:()=>m,toc:()=>u});var t=n(58168),a=(n(96540),n(15680)),l=n(20793),s=n(91435),r=n(21432),o=n(79162),d=n(34421);const y={sidebar_position:179},g="F.2 The Package Decimal",m={unversionedId:"arm/AA-F/AA-F.2",id:"arm/AA-F/AA-F.2",title:"F.2 The Package Decimal",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-F/AA-F.2.mdx",sourceDirName:"arm/AA-F",slug:"/arm/AA-F/AA-F.2",permalink:"/docs/arm/AA-F/AA-F.2",draft:!1,tags:[],version:"current",sidebarPosition:179,frontMatter:{sidebar_position:179},sidebar:"referenceManualSidebar",previous:{title:"F.1 Machine_Radix Attribute Definition Clause",permalink:"/docs/arm/AA-F/AA-F.1"},next:{title:"F.3 Edited Output for Decimal Types",permalink:"/docs/arm/AA-F/AA-F.3"}},p={},u=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Static Semantics",id:"static-semantics-1",level:4},{value:"Implementation Requirements",id:"implementation-requirements",level:4}],c={toc:u},A="wrapper";function T(e){let{components:i,...n}=e;return(0,a.yg)(A,(0,t.A)({},c,n,{components:i,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"f2-the-package-decimal"},"F.2 The Package Decimal"),(0,a.yg)("admonition",{type:"warning"},(0,a.yg)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"},"tracking issue"))),(0,a.yg)("h4",{id:"static-semantics"},"Static Semantics"),(0,a.yg)(o.A,{mdxType:"MarginText"},"1"),(0,a.yg)("p",null,"The library package Decimal has the following declaration: ",(0,a.yg)("br",null)),(0,a.yg)(o.A,{mdxType:"MarginText"},"2/5"),(0,a.yg)(d.A,{items:["AI12-0414-1"],mdxType:"MarginInfo"}),(0,a.yg)(r.A,{language:"ada",mdxType:"CodeBlock"},"package Ada.Decimal","\n","   with Pure is","\n",(0,a.yg)(o.A,{mdxType:"MarginText"},"3"),"Max_Scale : constant := implementation-defined;","\n","   Min_Scale : constant := implementation-defined;","\n",(0,a.yg)(o.A,{mdxType:"MarginText"},"4"),"Min_Delta : constant := 10.0**(-Max_Scale);","\n","   Max_Delta : constant := 10.0**(-Min_Scale);","\n",(0,a.yg)(o.A,{mdxType:"MarginText"},"5"),"Max_Decimal_Digits : constant := implementation-defined;","\n",(0,a.yg)(o.A,{mdxType:"MarginText"},"6/3"),(0,a.yg)(d.A,{items:["AI05-0229-1"],mdxType:"MarginInfo"}),"generic","\n","      type Dividend_Type  is delta ","<",">"," digits ","<",">",";","\n","      type Divisor_Type   is delta ","<",">"," digits ","<",">",";","\n","      type Quotient_Type  is delta ","<",">"," digits ","<",">",";","\n","      type Remainder_Type is delta ","<",">"," digits ","<",">",";","\n","   procedure Divide (Dividend  : in Dividend_Type;","\n","                     Divisor   : in Divisor_Type;","\n","                     Quotient  : out Quotient_Type;","\n","                     Remainder : out Remainder_Type)","\n","      with Convention =",">"," Intrinsic;","\n",(0,a.yg)(o.A,{mdxType:"MarginText"},"7"),"end Ada.Decimal;","\n"),(0,a.yg)(s.A,{mdxType:"AnnotatedOnly"},(0,a.yg)(o.A,{mdxType:"MarginText"},"7.a"),(0,a.yg)(l.A,{type:"aarm",aarm:"implementation-defined",mdxType:"Admonition"},(0,a.yg)("strong",null),"The values of named numbers in the package Decimal.",(0,a.yg)("br",null))),(0,a.yg)(o.A,{mdxType:"MarginText"},"8"),(0,a.yg)("p",null,"Max_Scale is the largest N such that 10.0**(\u2013N) is allowed as a decimal type's delta. Its type is ",(0,a.yg)("em",null,"universal_integer"),".",(0,a.yg)("br",null)),(0,a.yg)(o.A,{mdxType:"MarginText"},"9"),(0,a.yg)("p",null,"Min_Scale is the smallest N such that 10.0**(\u2013N) is allowed as a decimal type's delta. Its type is ",(0,a.yg)("em",null,"universal_integer"),".",(0,a.yg)("br",null)),(0,a.yg)(o.A,{mdxType:"MarginText"},"10"),(0,a.yg)("p",null,"Min_Delta is the smallest value allowed for ",(0,a.yg)("em",null,"delta")," in a ",(0,a.yg)("code",null,(0,a.yg)("a",{href:"../AA-3/AA-3.5#S0049"},"decimal_fixed_point_definition")),". Its type is ",(0,a.yg)("em",null,"universal_real"),".",(0,a.yg)("br",null)),(0,a.yg)(o.A,{mdxType:"MarginText"},"11"),(0,a.yg)("p",null,"Max_Delta is the largest value allowed for ",(0,a.yg)("em",null,"delta")," in a ",(0,a.yg)("code",null,(0,a.yg)("a",{href:"../AA-3/AA-3.5#S0049"},"decimal_fixed_point_definition")),". Its type is ",(0,a.yg)("em",null,"universal_real"),".",(0,a.yg)("br",null)),(0,a.yg)(o.A,{mdxType:"MarginText"},"12"),(0,a.yg)("p",null,"Max_Decimal_Digits is the largest value allowed for ",(0,a.yg)("em",null,"digits")," in a ",(0,a.yg)("code",null,(0,a.yg)("a",{href:"../AA-3/AA-3.5#S0049"},"decimal_fixed_point_definition")),". Its type is ",(0,a.yg)("em",null,"universal_integer"),". ",(0,a.yg)("br",null)),(0,a.yg)(s.A,{mdxType:"AnnotatedOnly"},(0,a.yg)(o.A,{mdxType:"MarginText"},"12.a"),(0,a.yg)(l.A,{type:"aarm",aarm:"reason",mdxType:"Admonition"},(0,a.yg)("strong",null),"The name is Max_Decimal_Digits versus Max_Digits, in order to avoid confusion with the named number System.Max_Digits relevant to floating point. ",(0,a.yg)("br",null))),(0,a.yg)("h4",{id:"static-semantics-1"},"Static Semantics"),(0,a.yg)(o.A,{mdxType:"MarginText"},"13"),(0,a.yg)("p",null,"The effect of Divide is as follows. The value of Quotient is Quotient_Type(Dividend/Divisor). The value of Remainder is Remainder_Type(Intermediate), where Intermediate is the difference between Dividend and the product of Divisor and Quotient; this result is computed exactly. ",(0,a.yg)("br",null)),(0,a.yg)("h4",{id:"implementation-requirements"},"Implementation Requirements"),(0,a.yg)(o.A,{mdxType:"MarginText"},"14"),(0,a.yg)("p",null,"Decimal.Max_Decimal_Digits shall be at least 18.",(0,a.yg)("br",null)),(0,a.yg)(o.A,{mdxType:"MarginText"},"15"),(0,a.yg)("p",null,"Decimal.Max_Scale shall be at least 18.",(0,a.yg)("br",null)),(0,a.yg)(o.A,{mdxType:"MarginText"},"16"),(0,a.yg)("p",null,"Decimal.Min_Scale shall be at most 0. ",(0,a.yg)("br",null)),(0,a.yg)(s.A,{mdxType:"AnnotatedOnly"},(0,a.yg)(o.A,{mdxType:"MarginText"},"17"),(0,a.yg)(l.A,{type:"aarm",aarm:"note",mdxType:"Admonition"},"NOTE   The effect of division yielding a quotient with control over rounding versus truncation is obtained by applying either the function attribute Quotient_Type'Round or the conversion Quotient_Type to the expression Dividend/Divisor. ",(0,a.yg)("br",null))))}T.isMDXComponent=!0}}]);