"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[1209],{64966:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>g,default:()=>A,frontMatter:()=>d,metadata:()=>m,toc:()=>p});var a=n(58168),i=(n(96540),n(15680)),r=n(20793),o=n(91435),s=(n(21432),n(79162)),l=n(34421);const d={sidebar_position:204},g="J.11 The Class Attribute of Untagged Incomplete Types",m={unversionedId:"arm/AA-J/AA-J.11",id:"arm/AA-J/AA-J.11",title:"J.11 The Class Attribute of Untagged Incomplete Types",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-J/AA-J.11.mdx",sourceDirName:"arm/AA-J",slug:"/arm/AA-J/AA-J.11",permalink:"/docs/arm/AA-J/AA-J.11",draft:!1,tags:[],version:"current",sidebarPosition:204,frontMatter:{sidebar_position:204},sidebar:"referenceManualSidebar",previous:{title:"J.10 Specific Suppression of Checks",permalink:"/docs/arm/AA-J/AA-J.10"},next:{title:"J.12 Pragma Interface",permalink:"/docs/arm/AA-J/AA-J.12"}},y={},p=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4}],c={toc:p},u="wrapper";function A(e){let{components:t,...n}=e;return(0,i.yg)(u,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"j11-the-class-attribute-of-untagged-incomplete-types"},"J.11 The Class Attribute of Untagged Incomplete Types"),(0,i.yg)("admonition",{type:"warning"},(0,i.yg)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"},"tracking issue"))),(0,i.yg)("h4",{id:"static-semantics"},"Static Semantics"),(0,i.yg)(s.A,{mdxType:"MarginText"},"1/2"),(0,i.yg)(l.A,{items:["AI95-00326-01"],mdxType:"MarginInfo"}),(0,i.yg)("p",null,"For the first subtype S of a type ",(0,i.yg)("em",null,"T")," declared by an ",(0,i.yg)("code",null,(0,i.yg)("a",{href:"../AA-3/AA-3.10#S0085"},"incomplete_type_declaration"))," that is not tagged, the following attribute is defined: ",(0,i.yg)("br",null)),(0,i.yg)(s.A,{mdxType:"MarginText"},"2/2"),(0,i.yg)(l.A,{items:["AI95-00326-01"],mdxType:"MarginInfo"}),(0,i.yg)("dt",null,(0,i.yg)("br",null),"S'Class "),(0,i.yg)("dl",null,(0,i.yg)("dd",null,"Denotes the first subtype of the incomplete class-wide type rooted at ",(0,i.yg)("em",null,"T"),". The completion of ",(0,i.yg)("em",null,"T")," shall declare a tagged type. Such an attribute reference shall occur in the same library unit as the ",(0,i.yg)("code",null,(0,i.yg)("a",{href:"../AA-3/AA-3.10#S0085"},"incomplete_type_declaration")),". ",(0,i.yg)("br",null))),(0,i.yg)(o.A,{mdxType:"AnnotatedOnly"},(0,i.yg)(s.A,{mdxType:"MarginText"},"2.a/2"),(0,i.yg)(l.A,{items:["AI95-00326-01"],mdxType:"MarginInfo"}),(0,i.yg)(r.A,{type:"aarm",aarm:"reason",mdxType:"Admonition"},(0,i.yg)("strong",null),"This must occur in the same unit to prevent children from imposing requirements on their ancestor library units for deferred incomplete types. ",(0,i.yg)("br",null))),(0,i.yg)(o.A,{mdxType:"AnnotatedOnly"},(0,i.yg)("h4",{id:"wording-changes-from-ada-95"},"Wording Changes from Ada 95")),(0,i.yg)(o.A,{mdxType:"AnnotatedOnly"},(0,i.yg)(s.A,{mdxType:"MarginText"},"2.b/3"),(0,i.yg)(l.A,{items:["AI95-00326-01","AI05-0299-1"],mdxType:"MarginInfo"}),(0,i.yg)(r.A,{type:"aarm",aarm:"note",mdxType:"Admonition"},"This subclause is new. This feature was moved here because the tagged incomplete type provides a better way to provide this capability (it doesn't put requirements on the completion based on uses that could be anywhere). Pity we didn't think of it in 1994. ",(0,i.yg)("br",null))))}A.isMDXComponent=!0}}]);