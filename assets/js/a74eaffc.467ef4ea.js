"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[3686],{51119:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var t=i(58168),o=(i(96540),i(15680));const a={title:"10.3 Program Structure"},l=void 0,r={unversionedId:"style-guide/s10/03",id:"style-guide/s10/03",title:"10.3 Program Structure",description:"Blocks",source:"@site/docs/style-guide/s10/03.mdx",sourceDirName:"style-guide/s10",slug:"/style-guide/s10/03",permalink:"/docs/style-guide/s10/03",draft:!1,tags:[],version:"current",frontMatter:{title:"10.3 Program Structure"},sidebar:"styleGuideSidebar",previous:{title:"10.2 Performance Measurement",permalink:"/docs/style-guide/s10/02"},next:{title:"10.4 Data Structures",permalink:"/docs/style-guide/s10/04"}},s={},d=[{value:"Blocks",id:"blocks",level:3},{value:"guideline",id:"guideline",level:4},{value:"example",id:"example",level:4},{value:"rationale",id:"rationale",level:4},{value:"notes",id:"notes",level:4}],u={toc:d},c="wrapper";function g(e){let{components:n,...i}=e;return(0,o.yg)(c,(0,t.A)({},u,i,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h3",{id:"blocks"},"Blocks"),(0,o.yg)("h4",{id:"guideline"},"guideline"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Use blocks (see Guideline 5.6.9) to introduce late initialization\nwhen measured performance indicates.")),(0,o.yg)("h4",{id:"example"},"example"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ada"},"   ...\n   Initial : Matrix;\n\nbegin  -- Find_Solution\n\n   Initialize_Solution_Matrix:\n      for Row in Initial'Range(1) loop\n         for Col in Initial'Range(2) loop\n            Initial (Row, Col) := Get_Value (Row, Col);\n         end loop;\n      end loop Initialize_Solution_Matrix;\n\n   Converge_To_The_Solution:\n      declare\n\n         Solution       : Matrix           := Identity;\n         Min_Iterations : constant Natural := ...;\n\n      begin  -- Converge_To_The_Solution\n         for Iterations in 1 .. Min_Iterations loop\n            Converge (Solution, Initial);\n         end loop;\n\n      end Converge_To_The_Solution;\n\n   ...\nend Find_Solution;\n")),(0,o.yg)("h4",{id:"rationale"},"rationale"),(0,o.yg)("p",null,"Late initialization allows a compiler more choices in register usage\noptimization. Depending on the circumstance, this may introduce a\nsignificant performance improvement."),(0,o.yg)("p",null,"Some compilers incur a performance penalty when declarative blocks are\nintroduced. Careful analysis and timing tests by the programmer may\nidentify those declarative blocks that should be removed."),(0,o.yg)("h4",{id:"notes"},"notes"),(0,o.yg)("p",null,"It is difficult to accurately predict through code inspections which\ndeclarative blocks improve performance and which degrade performance.\nHowever, with these general guidelines and a familiarity with the\nparticular implementation, performance can be improved."))}g.isMDXComponent=!0}}]);