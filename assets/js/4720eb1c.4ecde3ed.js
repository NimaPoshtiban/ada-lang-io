"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[5857],{4661:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>f,default:()=>T,frontMatter:()=>A,metadata:()=>b,toc:()=>k});var a=n(1716),r=n(3050),i=n(3989),o=n(7318),s=Object.defineProperty,c=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,g=(e,t)=>{for(var n in t||(t={}))d.call(t,n)&&m(e,n,t[n]);if(p)for(var n of p(t))u.call(t,n)&&m(e,n,t[n]);return e};const A={sidebar_position:93},f="12 Generic Units",b={unversionedId:"arm/AA-12/AA-12",id:"arm/AA-12/AA-12",title:"12 Generic Units",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-12/AA-12.mdx",sourceDirName:"arm/AA-12",slug:"/arm/AA-12/",permalink:"/docs/arm/AA-12/",draft:!1,tags:[],version:"current",sidebarPosition:93,frontMatter:{sidebar_position:93},sidebar:"referenceManualSidebar",previous:{title:"11.6 Exceptions and Optimization",permalink:"/docs/arm/AA-11/AA-11.6"},next:{title:"12.1 Generic Declarations",permalink:"/docs/arm/AA-12/AA-12.1"}},h={},k=[],y={toc:k};function T(e){var t,n=e,{components:s}=n,m=((e,t)=>{var n={};for(var a in e)d.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=g(g({},y),m),c(t,l({components:s,mdxType:"MDXLayout"}))),(0,a.kt)("h1",g({},{id:"12-generic-units"}),"12 Generic Units"),(0,a.kt)("admonition",g({},{type:"warning"}),(0,a.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,a.kt)("a",g({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,a.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(o.Z,{mdxType:"MarginText"},"1")),(0,a.kt)("p",null,"A ",(0,a.kt)("em",null,"generic unit")," is a program unit that is either a generic subprogram or a generic package. A generic unit is a ",(0,a.kt)("em",null,"template"),"[, which can be parameterized, and from which corresponding (nongeneric) subprograms or packages can be obtained]. The resulting program units are said to be ",(0,a.kt)("em",null,"instances")," of the original generic unit. ",(0,a.kt)("br",null)),(0,a.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(o.Z,{mdxType:"MarginText"},"1.a")),(0,a.kt)(r.Z,{type:"aarm",aarm:"glossary-entry",title:"Glossary entry: ",mdxType:"Admonition"},(0,a.kt)("strong",null),"A generic unit is a template for a (nongeneric) program unit; the template can be parameterized by objects, types, subprograms, and packages. An instance of a generic unit is created by a ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-12/AA-12.3#S0315"},"generic_instantiation")),". The rules of the language are enforced when a generic unit is compiled, using a generic contract model; additional checks are performed upon instantiation to verify the contract is met. That is, the declaration of a generic unit represents a contract between the body of the generic and instances of the generic. Generic units can be used to perform the role that macros sometimes play in other languages.",(0,a.kt)("br",null)),(0,a.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(o.Z,{mdxType:"MarginText"},"2")),(0,a.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(o.Z,{mdxType:"MarginText"},"3")),(0,a.kt)("p",null,"[A generic unit is declared by a ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-12/AA-12.1#S0310"},"generic_declaration")),". This form of declaration has a ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-12/AA-12.1#S0313"},"generic_formal_part"))," declaring any generic formal parameters. An instance of a generic unit is obtained as the result of a ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-12/AA-12.3#S0315"},"generic_instantiation"))," with appropriate generic actual parameters for the generic formal parameters. An instance of a generic subprogram is a subprogram. An instance of a generic package is a package.",(0,a.kt)("br",null)),(0,a.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,a.kt)(o.Z,{mdxType:"MarginText"},"4")),(0,a.kt)("p",null,"Generic units are templates. As templates they do not have the properties that are specific to their nongeneric counterparts. For example, a generic subprogram can be instantiated but it cannot be called. In contrast, an instance of a generic subprogram is a (nongeneric) subprogram; hence, this instance can be called but it cannot be used to produce further instances.] ",(0,a.kt)("br",null)))}T.isMDXComponent=!0}}]);