"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[7704],{7054:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>u});var a=n(9440),l=(n(6687),n(1716)),o=n(2526);const i={sidebar_position:42},s="5.3  If Statements",r={unversionedId:"arm/AA-5.3",id:"arm/AA-5.3",title:"5.3  If Statements",description:"We're still working on the Reference manual output.  Internal links are broken,",source:"@site/docs/arm/AA-5.3.mdx",sourceDirName:"arm",slug:"/arm/AA-5.3",permalink:"/docs/arm/AA-5.3",draft:!1,tags:[],version:"current",sidebarPosition:42,frontMatter:{sidebar_position:42},sidebar:"tutorialSidebar",previous:{title:"5.2  Assignment Statements",permalink:"/docs/arm/AA-5.2"},next:{title:"5.4  Case Statements",permalink:"/docs/arm/AA-5.4"}},d={},u=[{value:"Syntax",id:"syntax",level:4},{value:"Dynamic Semantics",id:"dynamic-semantics",level:4},{value:"Examples",id:"examples",level:4},{value:"Wording Changes from Ada 2005",id:"wording-changes-from-ada-2005",level:4}],k={toc:u};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"53--if-statements"},"5.3  If Statements"),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"We're still working on the Reference manual output.  Internal links are broken,\nas are a bunch of other things.\nSee the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"},"tracking issue"))),(0,l.kt)("p",null,"[An ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-5.3#S0175"},"if_statement"))," selects for execution at most one of the enclosed ",(0,l.kt)("code",null,"sequences_of_statements"),", depending on the (truth) value of one or more corresponding ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-4.5#S0150"},"condition")),"s.] "),(0,l.kt)("h4",{id:"syntax"},"Syntax"),(0,l.kt)("p",null,(0,l.kt)("code",null,"if_statement"),(0,l.kt)("a",{id:"S0175"}),(0,l.kt)("code",null," ::= "),"    ",(0,l.kt)("strong",null,"if")," ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-4.5#S0150"},"condition"))," ",(0,l.kt)("strong",null,"then"),"      ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-5.1#S0166"},"sequence_of_statements")),"   ","{",(0,l.kt)("strong",null,"elsif")," ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-4.5#S0150"},"condition"))," ",(0,l.kt)("strong",null,"then"),"      ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-5.1#S0166"},"sequence_of_statements")),"}","   [",(0,l.kt)("strong",null,"else"),"      ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-5.1#S0166"},"sequence_of_statements")),"]    ",(0,l.kt)("strong",null,"end")," ",(0,l.kt)("strong",null,"if"),";"),(0,l.kt)("p",null,(0,l.kt)("em",null,"Paragraphs 3 and 4 were deleted.")," "),(0,l.kt)("h4",{id:"dynamic-semantics"},"Dynamic Semantics"),(0,l.kt)("p",null,"{",(0,l.kt)("em",null,"AI05-0264-1"),"}"," For the execution of an ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-5.3#S0175"},"if_statement")),", the ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-4.5#S0150"},"condition"))," specified after ",(0,l.kt)("strong",null,"if"),", and any ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-4.5#S0150"},"condition")),"s specified after ",(0,l.kt)("strong",null,"elsif"),", are evaluated in succession (treating a final ",(0,l.kt)("strong",null,"else")," as ",(0,l.kt)("strong",null,"elsif")," True ",(0,l.kt)("strong",null,"then"),"), until one evaluates to True or all ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-4.5#S0150"},"condition")),"s are evaluated and yield False. If a ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-4.5#S0150"},"condition"))," evaluates to True, then the corresponding ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-5.1#S0166"},"sequence_of_statements"))," is executed; otherwise, none of them is executed. "),(0,l.kt)("p",null,(0,l.kt)("strong",null,"Ramification: "),"The part about all evaluating to False can't happen if there is an ",(0,l.kt)("strong",null,"else"),", since that is herein considered equivalent to ",(0,l.kt)("strong",null,"elsif")," True ",(0,l.kt)("strong",null,"then"),". "),(0,l.kt)("h4",{id:"examples"},"Examples"),(0,l.kt)("p",null,(0,l.kt)("em",null,"Examples of if statements:")," "),(0,l.kt)(o.Z,{mdxType:"CodeBlock"},"if Month = December and Day = 31 then","\n","   Month := January;","\n","   Day   := 1;","\n","   Year  := Year + 1;","\n","end if;","\n"),(0,l.kt)(o.Z,{mdxType:"CodeBlock"},"if Line_Too_Short then","\n","   raise Layout_Error;","\n","elsif Line_Full then","\n","   New_Line;","\n","   Put(Item);","\n","else","\n","   Put(Item);","\n","end if;","\n"),(0,l.kt)(o.Z,{mdxType:"CodeBlock"},"if My_Car.Owner.Vehicle /= My_Car then            --  see 3.10.1","\n",'   Report ("Incorrect data");',"\n","end if;","\n"),(0,l.kt)("h4",{id:"wording-changes-from-ada-2005"},"Wording Changes from Ada 2005"),(0,l.kt)("p",null,"{",(0,l.kt)("em",null,"AI05-0147-1"),"}"," Moved definition of ",(0,l.kt)("code",null,(0,l.kt)("a",{href:"./AA-4.5#S0150"},"condition"))," to 4.5.7 in order to eliminate a forward reference. "))}c.isMDXComponent=!0}}]);