"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[5857],{48881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>k,default:()=>T,frontMatter:()=>b,metadata:()=>A,toc:()=>h});var r=n(91716),a=n(21256),i=n(24895),o=n(48424),s=Object.defineProperty,c=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,g=(e,t)=>{for(var n in t||(t={}))u.call(t,n)&&d(e,n,t[n]);if(p)for(var n of p(t))m.call(t,n)&&d(e,n,t[n]);return e};const b={sidebar_position:95},k="12 Generic Units",A={unversionedId:"arm/AA-12/AA-12",id:"arm/AA-12/AA-12",title:"12 Generic Units",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-12/AA-12.mdx",sourceDirName:"arm/AA-12",slug:"/arm/AA-12/",permalink:"/docs/arm/AA-12/",draft:!1,tags:[],version:"current",sidebarPosition:95,frontMatter:{sidebar_position:95},sidebar:"referenceManualSidebar",previous:{title:"11.6 Exceptions and Optimization",permalink:"/docs/arm/AA-11/AA-11.6"},next:{title:"12.1 Generic Declarations",permalink:"/docs/arm/AA-12/AA-12.1"}},f={},h=[],y={toc:h};function T(e){var t,n=e,{components:s}=n,d=((e,t)=>{var n={};for(var r in e)u.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&p)for(var r of p(e))t.indexOf(r)<0&&m.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=g(g({},y),d),c(t,l({components:s,mdxType:"MDXLayout"}))),(0,r.kt)("h1",g({},{id:"12-generic-units"}),"12 Generic Units"),(0,r.kt)("admonition",g({},{type:"warning"}),(0,r.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,r.kt)("a",g({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,r.kt)(o.Z,{mdxType:"MarginText"},"1"),(0,r.kt)("p",null,"A ",(0,r.kt)("em",null,"generic unit")," is a program unit that is either a generic subprogram or a generic package. A generic unit is a ",(0,r.kt)("em",null,"template"),"[, which can be parameterized, and from which corresponding (nongeneric) subprograms or packages can be obtained]. The resulting program units are said to be ",(0,r.kt)("em",null,"instances")," of the original generic unit. ",(0,r.kt)("br",null)),(0,r.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,r.kt)(o.Z,{mdxType:"MarginText"},"1.a/5"),(0,r.kt)(a.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},(0,r.kt)("strong",null,"Term entry: "),(0,r.kt)("strong",null,"generic unit")," \u2014 template for a (nongeneric) program unit",(0,r.kt)("br",null),"Note 1: The template can be parameterized by objects, types, subprograms, and packages.",(0,r.kt)("br",null),"Note 2: Generic units can be used to perform the role that macros sometimes play in other languages.",(0,r.kt)("br",null))),(0,r.kt)(i.Z,{mdxType:"AnnotatedOnly"},(0,r.kt)(o.Z,{mdxType:"MarginText"},"1.b/5"),(0,r.kt)(a.Z,{type:"aarm",aarm:"note",mdxType:"Admonition"},(0,r.kt)("strong",null,"Term entry: "),(0,r.kt)("strong",null,"generic instance")," \u2014 nongeneric unit created by the instantiation of a generic unit",(0,r.kt)("br",null))),(0,r.kt)(o.Z,{mdxType:"MarginText"},"2"),(0,r.kt)("p",null,"[A generic unit is declared by a ",(0,r.kt)("code",null,(0,r.kt)("a",{href:"../AA-12/AA-12.1#S0310"},"generic_declaration")),". This form of declaration has a ",(0,r.kt)("code",null,(0,r.kt)("a",{href:"../AA-12/AA-12.1#S0313"},"generic_formal_part"))," declaring any generic formal parameters. An instance of a generic unit is obtained as the result of a ",(0,r.kt)("code",null,(0,r.kt)("a",{href:"../AA-12/AA-12.3#S0315"},"generic_instantiation"))," with appropriate generic actual parameters for the generic formal parameters. An instance of a generic subprogram is a subprogram. An instance of a generic package is a package.",(0,r.kt)("br",null)),(0,r.kt)(o.Z,{mdxType:"MarginText"},"3"),(0,r.kt)("p",null,"Generic units are templates. As templates they do not have the properties that are specific to their nongeneric counterparts. For example, a generic subprogram can be instantiated but it cannot be called. In contrast, an instance of a generic subprogram is a (nongeneric) subprogram; hence, this instance can be called but it cannot be used to produce further instances.] ",(0,r.kt)("br",null)))}T.isMDXComponent=!0}}]);