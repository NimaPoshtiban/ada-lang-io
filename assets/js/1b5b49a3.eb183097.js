"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[1845],{8285:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>k,frontMatter:()=>u,metadata:()=>A,toc:()=>b});var a=n(1716),r=n(2787),i=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))m.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))d.call(t,n)&&p(e,n,t[n]);return e};const u={sidebar_position:202},f="J.12 Pragma Interface",A={unversionedId:"arm/AA-J/AA-J.12",id:"arm/AA-J/AA-J.12",title:"J.12 Pragma Interface",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-J/AA-J.12.mdx",sourceDirName:"arm/AA-J",slug:"/arm/AA-J/AA-J.12",permalink:"/docs/arm/AA-J/AA-J.12",draft:!1,tags:[],version:"current",sidebarPosition:202,frontMatter:{sidebar_position:202},sidebar:"referenceManualSidebar",previous:{title:"J.11 The Class Attribute of Untagged Incomplete Types",permalink:"/docs/arm/AA-J/AA-J.11"},next:{title:"J.13 Dependence Restriction Identifiers",permalink:"/docs/arm/AA-J/AA-J.13"}},g={},b=[{value:"Syntax",id:"syntax",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4}],h={toc:b};function k(e){var t,n=e,{components:i}=n,p=((e,t)=>{var n={};for(var a in e)m.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&d.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=c(c({},h),p),o(t,s({components:i,mdxType:"MDXLayout"}))),(0,a.kt)("h1",c({},{id:"j12-pragma-interface"}),"J.12 Pragma Interface"),(0,a.kt)("admonition",c({},{type:"warning"}),(0,a.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,a.kt)("a",c({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,a.kt)("h4",c({},{id:"syntax"}),"Syntax"),(0,a.kt)("p",null,"{",(0,a.kt)("em",null,"AI95-00284-02"),"}"," ",(0,a.kt)("br",null),"In addition to an identifier, the reserved word ",(0,a.kt)("strong",null,"interface")," is allowed as a pragma name, to provide compatibility with a prior edition of this Reference Manual. ",(0,a.kt)("br",null)),(0,a.kt)(r.Z,{type:"aarm",aarm:"implementation-note",title:"Implementation Note: ",mdxType:"Admonition"},(0,a.kt)("strong",null),"{",(0,a.kt)("em",null,"AI95-00284-02"),"}"," ",(0,a.kt)("br",null),"All implementations need to at least recognize and ignore this pragma. A syntax error is not an acceptable implementation of this pragma. ",(0,a.kt)("br",null)),(0,a.kt)("h4",c({},{id:"wording-changes-from-ada-95"}),"Wording Changes from Ada 95"),(0,a.kt)(r.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},"{",(0,a.kt)("em",null,"AI95-00326-01"),"}"," ","{",(0,a.kt)("em",null,"AI05-0299-1"),"}"," ",(0,a.kt)("br",null),"This subclause is new. This is necessary as ",(0,a.kt)("strong",null,"interface")," is now a reserved word, which would prevent pragma Interface from being an implementation-defined pragma. We don't define any semantics for this pragma, as we expect that implementations will continue to use whatever they currently implement - requiring any changes would be counter-productive. ",(0,a.kt)("br",null)))}k.isMDXComponent=!0}}]);