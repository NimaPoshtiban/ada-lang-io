"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[1613],{99069:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>f,contentTitle:()=>c,default:()=>y,frontMatter:()=>m,metadata:()=>h,toc:()=>k});var n=a(91716),i=Object.defineProperty,r=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,d=(e,t)=>{for(var a in t||(t={}))l.call(t,a)&&u(e,a,t[a]);if(s)for(var a of s(t))p.call(t,a)&&u(e,a,t[a]);return e};const m={title:"7.7 Summary"},c=void 0,h={unversionedId:"style-guide/s7/07",id:"style-guide/s7/07",title:"7.7 Summary",description:"fundamentals",source:"@site/docs/style-guide/s7/07.mdx",sourceDirName:"style-guide/s7",slug:"/style-guide/s7/07",permalink:"/docs/style-guide/s7/07",draft:!1,tags:[],version:"current",frontMatter:{title:"7.7 Summary"},sidebar:"styleGuideSidebar",previous:{title:"7.6 Input/Output",permalink:"/docs/style-guide/s7/06"},next:{title:"8. Reusability",permalink:"/docs/style-guide/s8/"}},f={},k=[{value:"fundamentals",id:"fundamentals",level:3},{value:"numeric types and expressions",id:"numeric-types-and-expressions",level:3},{value:"storage control",id:"storage-control",level:3},{value:"tasking",id:"tasking",level:3},{value:"exceptions",id:"exceptions",level:4},{value:"representation clauses and implementation-dependent features",id:"representation-clauses-and-implementation-dependent-features",level:3},{value:"input/output",id:"inputoutput",level:3}],g={toc:k};function y(e){var t,a=e,{components:i}=a,u=((e,t)=>{var a={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&s)for(var n of s(e))t.indexOf(n)<0&&p.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=d(d({},g),u),r(t,o({components:i,mdxType:"MDXLayout"}))),(0,n.kt)("h3",d({},{id:"fundamentals"}),"fundamentals"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'In programs or components intended to have a long life, avoid using\nthe features of Ada declared as "obsolescent" by Annex J of the Ada\nReference Manual (1995), unless the use of the feature is needed for\nbackward compatibility with Ada 83 (Ada Reference Manual 1983).'),(0,n.kt)("li",{parentName:"ul"},"Document the use of any obsolescent features."),(0,n.kt)("li",{parentName:"ul"},"Avoid using the following features:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The short renamings of the packages in the predefined\nenvironment (e.g., Text_IO as opposed to Ada.Text_IO)"),(0,n.kt)("li",{parentName:"ul"},"The character replacements of ","!"," for |, : for ","#",", and % for\nquotation marks"),(0,n.kt)("li",{parentName:"ul"},"Reduced accuracy subtypes of floating-point types"),(0,n.kt)("li",{parentName:"ul"},"The 'Constrained attribute as applied to private types"),(0,n.kt)("li",{parentName:"ul"},"The predefined package ASCII"),(0,n.kt)("li",{parentName:"ul"},"The exception Numeric_Error"),(0,n.kt)("li",{parentName:"ul"},"Various representation specifications, including at clauses, mod\nclauses, interrupt entries, and the Storage_Size attribute"))),(0,n.kt)("li",{parentName:"ul"},"Make informed assumptions about the support provided for the\nfollowing on potential target platforms:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Number of bits available for type Integer (range constraints)"),(0,n.kt)("li",{parentName:"ul"},"Number of decimal digits of precision available for\nfloating-point types"),(0,n.kt)("li",{parentName:"ul"},"Number of bits available for fixed-point types (delta and range\nconstraints)"),(0,n.kt)("li",{parentName:"ul"},"Number of characters per line of source text"),(0,n.kt)("li",{parentName:"ul"},"Number of bits for Root_Integer expressions"),(0,n.kt)("li",{parentName:"ul"},"Number of seconds for the range of Duration"),(0,n.kt)("li",{parentName:"ul"},"Number of milliseconds for Duration'Small"),(0,n.kt)("li",{parentName:"ul"},"Minimum and maximum scale for decimal types"))),(0,n.kt)("li",{parentName:"ul"},"Avoid assumptions about the values and the number of values included\nin the type Character."),(0,n.kt)("li",{parentName:"ul"},"Use highlighting comments for each package, subprogram, and task\nwhere any nonportable features are present."),(0,n.kt)("li",{parentName:"ul"},"For each nonportable feature employed, describe the expectations for\nthat feature."),(0,n.kt)("li",{parentName:"ul"},"Consider using only a parameterless procedure as the main\nsubprogram."),(0,n.kt)("li",{parentName:"ul"},"Consider using Ada.Command_Line for accessing values from the\nenvironment, but recognize that this package's behavior and even its\nspecification are nonportable."),(0,n.kt)("li",{parentName:"ul"},"Encapsulate and document all uses of package Ada.Command_Line."),(0,n.kt)("li",{parentName:"ul"},"Create packages specifically designed to isolate hardware and\nimplementation dependencies and designed so that their specification\nwill not change when porting."),(0,n.kt)("li",{parentName:"ul"},"Clearly indicate the objectives if machine or solution efficiency is\nthe reason for hardware or implementation-dependent code."),(0,n.kt)("li",{parentName:"ul"},"For the packages that hide implementation dependencies, maintain\ndifferent package bodies for different target environments."),(0,n.kt)("li",{parentName:"ul"},"Isolate interrupt receiving tasks into implementation-dependent\npackages."),(0,n.kt)("li",{parentName:"ul"},"Refer to Annex M of the Ada Reference Manual (1995) for a list of\nimplementation-dependent features."),(0,n.kt)("li",{parentName:"ul"},"Avoid the use of vendor-supplied packages."),(0,n.kt)("li",{parentName:"ul"},"Avoid the use of features added to the predefined packages that are\nnot specified in the Ada language definition or Specialized Needs\nAnnexes."),(0,n.kt)("li",{parentName:"ul"},"Use features defined in the Specialized Needs Annexes rather than\nvendor-defined features."),(0,n.kt)("li",{parentName:"ul"},"Document clearly the use of any features from the Specialized Needs\nAnnexes (systems programming, real-time systems, distributed\nsystems, information systems, numerics, and safety and security)."),(0,n.kt)("li",{parentName:"ul"},"Do not write code whose correct execution depends on the particular\nparameter passing mechanism used by an implementation (Ada Reference\nManual 1995, \xa76.2; Cohen 1986)."),(0,n.kt)("li",{parentName:"ul"},"If a subprogram has more than one formal parameter of a given\nsubtype, at least one of which is ","[","in","]"," out, make sure that the\nsubprogram can properly handle the case when both formal parameters\ndenote the same actual object."),(0,n.kt)("li",{parentName:"ul"},"Avoid depending on the order in which certain constructs in Ada are\nevaluated .")),(0,n.kt)("h3",d({},{id:"numeric-types-and-expressions"}),"numeric types and expressions"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Avoid using the predefined numeric types in package Standard . Use\nrange and digits declarations and let the implementation pick the\nappropriate representation."),(0,n.kt)("li",{parentName:"ul"},"For programs that require greater accuracy than that provided by the\nglobal assumptions, define a package that declares a private type\nand operations as needed; see Pappas (1985) for a full explanation\nand examples."),(0,n.kt)("li",{parentName:"ul"},"Consider using predefined numeric types (Integer, Natural, Positive)\nfor:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Indexes into arrays where the index type is not significant,\nsuch as type String"),(0,n.kt)("li",{parentName:"ul"},'"Pure" numbers, that is, numbers with no associated physical\nunit (e.g., exponents)'),(0,n.kt)("li",{parentName:"ul"},"Values whose purpose is to control a repeat or iteration count"))),(0,n.kt)("li",{parentName:"ul"},"Use an implementation that supports the Numerics Annex (Ada\nReference Manual 1995, Annex G) when performance and accuracy are\noverriding concerns ."),(0,n.kt)("li",{parentName:"ul"},"Carefully analyze what accuracy and precision you really need."),(0,n.kt)("li",{parentName:"ul"},"Do not press the accuracy limits of the machine(s)."),(0,n.kt)("li",{parentName:"ul"},"Comment the analysis and derivation of the numerical aspects of a\nprogram."),(0,n.kt)("li",{parentName:"ul"},"Anticipate the range of values of subexpressions to avoid exceeding\nthe underlying range of their base type. Use derived types,\nsubtypes, factoring, and range constraints on numeric types."),(0,n.kt)("li",{parentName:"ul"},"Consider using \\<= and ",">","= to do relational tests on real valued\narguments, avoiding the \\<, ",">",", =, and /= operations."),(0,n.kt)("li",{parentName:"ul"},"Use values of type attributes in comparisons and checking for small\nvalues."),(0,n.kt)("li",{parentName:"ul"},"In information systems, declare different numeric decimal types to\ncorrespond to different scales (Brosgol, Eachus, and Emery 1994)."),(0,n.kt)("li",{parentName:"ul"},"Create objects of different decimal types to reflect different units\nof measure (Brosgol, Eachus, and Emery 1994)."),(0,n.kt)("li",{parentName:"ul"},"Declare subtypes of the appropriately scaled decimal type to provide\nappropriate range constraints for application-specific types."),(0,n.kt)("li",{parentName:"ul"},"Encapsulate each measure category in a package (Brosgol, Eachus, and\nEmery 1994)."),(0,n.kt)("li",{parentName:"ul"},"Declare as few decimal types as possible for unitless data (Brosgol,\nEachus, and Emery 1994)."),(0,n.kt)("li",{parentName:"ul"},"For decimal calculations, determine whether the result should be\ntruncated toward 0 or rounded."),(0,n.kt)("li",{parentName:"ul"},"Avoid decimal types and arithmetic on compilers that do not support\nthe Information Systems Annex (Ada Reference Manual 1995, Annex F)\nin full.")),(0,n.kt)("h3",d({},{id:"storage-control"}),"storage control"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Do not use a representation clause to specify number of storage\nunits."),(0,n.kt)("li",{parentName:"ul"},"Do not compare access-to-subprogram values."),(0,n.kt)("li",{parentName:"ul"},"Consider using explicitly defined storage pool mechanisms.")),(0,n.kt)("h3",d({},{id:"tasking"}),"tasking"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Do not depend on the order in which task objects are activated when\ndeclared in the same declarative list."),(0,n.kt)("li",{parentName:"ul"},"Do not depend on a particular delay being achievable (Nissen and\nWallis 1984)."),(0,n.kt)("li",{parentName:"ul"},"Never use knowledge of the execution pattern of tasks to achieve\ntiming requirements."),(0,n.kt)("li",{parentName:"ul"},"Do not assume a correlation between System.Tick and type Duration."),(0,n.kt)("li",{parentName:"ul"},"Do not depend on the order in which guard conditions are evaluated\nor on the algorithm for choosing among several open select\nalternatives."),(0,n.kt)("li",{parentName:"ul"},"Do not assume that tasks execute uninterrupted until they reach a\nsynchronization point."),(0,n.kt)("li",{parentName:"ul"},"Use pragma Priority to distinguish general levels of importance\nonly."),(0,n.kt)("li",{parentName:"ul"},"Avoid using the abort statement."),(0,n.kt)("li",{parentName:"ul"},"Do not use unprotected shared variables."),(0,n.kt)("li",{parentName:"ul"},"Consider using protected types to provide data synchronization."),(0,n.kt)("li",{parentName:"ul"},"Have tasks communicate through the rendezvous mechanism."),(0,n.kt)("li",{parentName:"ul"},"Do not use unprotected shared variables as a task synchronization\ndevice."),(0,n.kt)("li",{parentName:"ul"},"Consider using protected objects to encapsulate shared data."),(0,n.kt)("li",{parentName:"ul"},"Use pragma Atomic or Volatile only when you are forced to by\nrun-time system deficiencies.")),(0,n.kt)("h4",d({},{id:"exceptions"}),"exceptions"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Do not depend on the exact locations at which predefined exceptions\nare raised."),(0,n.kt)("li",{parentName:"ul"},"Do not rely on the behavior of Ada.Exceptions beyond the minimum\ndefined in the language."),(0,n.kt)("li",{parentName:"ul"},"Do not raise implementation-specific exceptions."),(0,n.kt)("li",{parentName:"ul"},"Convert implementation-specific exceptions within interface packages\nto visible user-defined exceptions.")),(0,n.kt)("h3",d({},{id:"representation-clauses-and-implementation-dependent-features"}),"representation clauses and implementation-dependent features"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Use algorithms that do not depend on the representation of the data\nand, therefore, do not need representation clauses."),(0,n.kt)("li",{parentName:"ul"},"Consider using representation clauses when accessing or defining\ninterface data or when a specific representation is needed to\nimplement a design ."),(0,n.kt)("li",{parentName:"ul"},"Do not assume that sharing source files between programs guarantees\nthe same representation of data types in those files."),(0,n.kt)("li",{parentName:"ul"},"Avoid using package System constants except in attempting to\ngeneralize other machine-dependent constructs."),(0,n.kt)("li",{parentName:"ul"},"Avoid machine code inserts."),(0,n.kt)("li",{parentName:"ul"},"Use the package Interfaces and its language-defined child packages\nrather than implementation-specific mechanisms."),(0,n.kt)("li",{parentName:"ul"},"Consider using pragma Import rather than access-to-subprogram types\nfor interfacing to subprograms in other languages."),(0,n.kt)("li",{parentName:"ul"},"Isolate all subprograms employing pragmas Import, Export, and\nConvention to implementation-specific (interface) package bodies."),(0,n.kt)("li",{parentName:"ul"},"Avoid pragmas and attributes added by the compiler implementor."),(0,n.kt)("li",{parentName:"ul"},"Avoid dependence on Ada.Unchecked_Deallocation."),(0,n.kt)("li",{parentName:"ul"},"Avoid dependence on the attribute Unchecked_Access."),(0,n.kt)("li",{parentName:"ul"},"Avoid dependence on Ada.Unchecked_Conversion."),(0,n.kt)("li",{parentName:"ul"},"Avoid the direct invocation of or implicit dependence upon an\nunderlying host operating system or Ada run-time support system,\nexcept where the interface is explicitly defined in the language\n(e.g., Annex C or D of the Ada Reference Manual ","[","1995","]",")."),(0,n.kt)("li",{parentName:"ul"},"Use standard bindings and the package Ada.Command_Line when you\nneed to invoke the underlying")),(0,n.kt)("p",null,"run-time support system."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Use features defined in the Annexes rather than vendor-defined\nfeatures.")),(0,n.kt)("h3",d({},{id:"inputoutput"}),"input/output"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Use constants and variables as symbolic actuals for the Name and\nForm parameters on the predefined I/O packages. Declare and\ninitialize them in an implementation dependency package."),(0,n.kt)("li",{parentName:"ul"},"Close all files explicitly."),(0,n.kt)("li",{parentName:"ul"},"Avoid performing I/O on access types."),(0,n.kt)("li",{parentName:"ul"},"Consider using Sequential_IO or Direct_IO instead of Stream_IO\nunless you need the low-level, heterogeneous I/O features provided\nby Stream_IO."),(0,n.kt)("li",{parentName:"ul"},"Consider using Current_Error and Set_Error for run-time error\nmessages.")),(0,n.kt)("admonition",d({},{type:"note"}),(0,n.kt)("p",{parentName:"admonition"},'This page of the "Ada Quality and Style Guide" has been adapted from the\noriginal work at ',(0,n.kt)("a",d({parentName:"p"},{href:"https://en.wikibooks.org/wiki/Ada_Style_Guide"}),"https://en.wikibooks.org/wiki/Ada_Style_Guide"),", which is\nlicensed under the\n",(0,n.kt)("a",d({parentName:"p"},{href:"https://creativecommons.org/licenses/by-sa/3.0/"}),"Creative Commons Attribution-ShareAlike License"),";\nadditional terms may apply. Page not endorsed by Wikibooks or the Ada\nStyle Guide Wikibook authors. This page is licensed under the same license\nas the original work.")))}y.isMDXComponent=!0}}]);