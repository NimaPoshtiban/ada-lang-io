"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[7159],{1685:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>f,contentTitle:()=>h,default:()=>g,frontMatter:()=>A,metadata:()=>k,toc:()=>b});var r=t(1716),n=t(8604),i=t(2787),o=Object.defineProperty,l=Object.defineProperties,s=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,a,t)=>a in e?o(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,m=(e,a)=>{for(var t in a||(a={}))d.call(a,t)&&u(e,t,a[t]);if(c)for(var t of c(a))p.call(a,t)&&u(e,t,a[t]);return e};const A={sidebar_position:11},h="2.5 Character Literals",k={unversionedId:"arm/AA-2/AA-2.5",id:"arm/AA-2/AA-2.5",title:"2.5 Character Literals",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-2/AA-2.5.mdx",sourceDirName:"arm/AA-2",slug:"/arm/AA-2/AA-2.5",permalink:"/docs/arm/AA-2/AA-2.5",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"referenceManualSidebar",previous:{title:"2.4 Numeric Literals",permalink:"/docs/arm/AA-2/AA-2.4"},next:{title:"2.6 String Literals",permalink:"/docs/arm/AA-2/AA-2.6"}},f={},b=[{value:"Syntax",id:"syntax",level:4},{value:"Examples",id:"examples",level:4},{value:"Wording Changes from Ada 83",id:"wording-changes-from-ada-83",level:4}],y={toc:b};function g(e){var a,t=e,{components:o}=t,u=((e,a)=>{var t={};for(var r in e)d.call(e,r)&&a.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&c)for(var r of c(e))a.indexOf(r)<0&&p.call(e,r)&&(t[r]=e[r]);return t})(t,["components"]);return(0,r.kt)("wrapper",(a=m(m({},y),u),l(a,s({components:o,mdxType:"MDXLayout"}))),(0,r.kt)("h1",m({},{id:"25-character-literals"}),"2.5 Character Literals"),(0,r.kt)("admonition",m({},{type:"warning"}),(0,r.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,r.kt)("a",m({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,r.kt)("p",null,"[A ",(0,r.kt)("code",null,(0,r.kt)("a",{href:"../AA-2/AA-2.5#S0015"},"character_literal"))," is formed by enclosing a graphic character between two apostrophe characters.] ",(0,r.kt)("br",null)),(0,r.kt)("h4",m({},{id:"syntax"}),"Syntax"),(0,r.kt)(n.Z,{mdxType:"CodeBlock"},(0,r.kt)("code",null,"character_literal"),(0,r.kt)("a",{id:"S0015"}),(0,r.kt)("code",null," ::= "),"'",(0,r.kt)("code",null,"graphic_character"),"'",(0,r.kt)("br",null)),(0,r.kt)(i.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},"NOTE 1   A ",(0,r.kt)("code",null,(0,r.kt)("a",{href:"../AA-2/AA-2.5#S0015"},"character_literal"))," is an enumeration literal of a character type. See 3.5.2. ",(0,r.kt)("br",null)),(0,r.kt)("h4",m({},{id:"examples"}),"Examples"),(0,r.kt)("p",null,(0,r.kt)("em",null,"Examples of character literals:")," ",(0,r.kt)("br",null)),(0,r.kt)(n.Z,{mdxType:"CodeBlock"},"--  ","{","AI95-00433-01","}","\n"," 'A'     '*'     '''     ' '","\n","'L'     ''     ''    -- Various els.","\n","''     ''            -- Big numbers - infinity and aleph.","\n"),(0,r.kt)("h4",m({},{id:"wording-changes-from-ada-83"}),"Wording Changes from Ada 83"),(0,r.kt)(i.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},"{",(0,r.kt)("em",null,"AI05-0299-1"),"}"," ",(0,r.kt)("br",null),"The definitions of the values of literals are in Clauses 3 and 4, rather than here, since it requires knowledge of types. ",(0,r.kt)("br",null)))}g.isMDXComponent=!0}}]);