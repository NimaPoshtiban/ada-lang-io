"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[4018],{1857:(t,a,n)=>{n.r(a),n.d(a,{assets:()=>h,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>C,toc:()=>i});var r=n(9440),e=(n(6687),n(1716)),c=n(2526);const o={sidebar_position:195},s="J.5  ASCII",C={unversionedId:"arm/AA-J.5",id:"arm/AA-J.5",title:"J.5  ASCII",description:"We're still working on the Reference manual output.  Internal links are broken,",source:"@site/docs/arm/AA-J.5.mdx",sourceDirName:"arm",slug:"/arm/AA-J.5",permalink:"/docs/arm/AA-J.5",draft:!1,tags:[],version:"current",sidebarPosition:195,frontMatter:{sidebar_position:195},sidebar:"tutorialSidebar",previous:{title:"J.4  The Constrained Attribute",permalink:"/docs/arm/AA-J.4"},next:{title:"J.6  Numeric_Error",permalink:"/docs/arm/AA-J.6"}},h={},i=[{value:"Static Semantics",id:"static-semantics",level:4}],l={toc:i};function d(t){let{components:a,...n}=t;return(0,e.kt)("wrapper",(0,r.Z)({},l,n,{components:a,mdxType:"MDXLayout"}),(0,e.kt)("h1",{id:"j5--ascii"},"J.5  ASCII"),(0,e.kt)("admonition",{type:"warning"},(0,e.kt)("p",{parentName:"admonition"},"We're still working on the Reference manual output.  Internal links are broken,\nas are a bunch of other things.\nSee the ",(0,e.kt)("a",{parentName:"p",href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"},"tracking issue"))),(0,e.kt)("h4",{id:"static-semantics"},"Static Semantics"),(0,e.kt)("p",null,"The following declaration exists in the declaration of package Standard: "),(0,e.kt)(c.Z,{mdxType:"CodeBlock"},"package ASCII is","\n"),(0,e.kt)(c.Z,{mdxType:"CodeBlock"},"--  Control characters:","\n"),(0,e.kt)(c.Z,{mdxType:"CodeBlock"},"NUL   : constant Character := nul;  SOH   : constant Character := soh;","\n","  STX   : constant Character := stx;  ETX   : constant Character := etx;","\n","  EOT   : constant Character := eot;  ENQ   : constant Character := enq;","\n","  ACK   : constant Character := ack;  BEL   : constant Character := bel;","\n","  BS    : constant Character := bs;  HT    : constant Character := ht;","\n","  LF    : constant Character := lf;  VT    : constant Character := vt;","\n","  FF    : constant Character := ff;  CR    : constant Character := cr;","\n","  SO    : constant Character := so;  SI    : constant Character := si;","\n","  DLE   : constant Character := dle;  DC1   : constant Character := dc1;","\n","  DC2   : constant Character := dc2;  DC3   : constant Character := dc3;","\n","  DC4   : constant Character := dc4;  NAK   : constant Character := nak;","\n","  SYN   : constant Character := syn;  ETB   : constant Character := etb;","\n","  CAN   : constant Character := can;  EM    : constant Character := em;","\n","  SUB   : constant Character := sub;  ESC   : constant Character := esc;","\n","  FS    : constant Character := fs;  GS    : constant Character := gs;","\n","  RS    : constant Character := rs;  US    : constant Character := us;","\n","  DEL   : constant Character := del;","\n"),(0,e.kt)(c.Z,{mdxType:"CodeBlock"},"-- Other characters:","\n"),(0,e.kt)(c.Z,{mdxType:"CodeBlock"},"Exclam   : constant Character:= '!'; Quotation : constant Character:= '\"';","\n","  Sharp    : constant Character:= '#'; Dollar    : constant Character:= '$';","\n","  Percent  : constant Character:= '%'; Ampersand : constant Character:= '&';","\n","  Colon    : constant Character:= ':'; Semicolon : constant Character:= ';';","\n","  Query    : constant Character:= '?'; At_Sign   : constant Character:= '@';","\n","  L_Bracket: constant Character:= '['; Back_Slash: constant Character:= '\\';","\n","  R_Bracket: constant Character:= ']'; Circumflex: constant Character:= '^';","\n","  Underline: constant Character:= '_'; Grave     : constant Character:= '`';","\n","  L_Brace  : constant Character:= '","{","'; Bar       : constant Character:= '|';","\n","  R_Brace  : constant Character:= '","}","'; Tilde     : constant Character:= '~';","\n"),(0,e.kt)(c.Z,{mdxType:"CodeBlock"},"-- Lower case letters:","\n"),(0,e.kt)(c.Z,{mdxType:"CodeBlock"},"LC_A: constant Character:= 'a';","\n","  ...","\n","  LC_Z: constant Character:= 'z';","\n"),(0,e.kt)(c.Z,{mdxType:"CodeBlock"},"end ASCII;","\n"))}d.isMDXComponent=!0}}]);