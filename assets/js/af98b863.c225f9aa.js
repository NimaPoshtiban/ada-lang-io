"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[7901],{4705:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var n=i(9440),a=(i(6687),i(1716)),l=i(2526);const s={sidebar_position:176},o="F.2  The Package Decimal",d={unversionedId:"arm/AA-F.2",id:"arm/AA-F.2",title:"F.2  The Package Decimal",description:"We're still working on the Reference manual output.  Internal links are broken,",source:"@site/docs/arm/AA-F.2.mdx",sourceDirName:"arm",slug:"/arm/AA-F.2",permalink:"/docs/arm/AA-F.2",draft:!1,tags:[],version:"current",sidebarPosition:176,frontMatter:{sidebar_position:176},sidebar:"tutorialSidebar",previous:{title:"F.1  Machine_Radix Attribute Definition Clause",permalink:"/docs/arm/AA-F.1"},next:{title:"F.3  Edited Output for Decimal Types",permalink:"/docs/arm/AA-F.3"}},r={},c=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Static Semantics",id:"static-semantics-1",level:4},{value:"Implementation Requirements",id:"implementation-requirements",level:4}],m={toc:c};function u(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"f2--the-package-decimal"},"F.2  The Package Decimal"),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"We're still working on the Reference manual output.  Internal links are broken,\nas are a bunch of other things.\nSee the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"},"tracking issue"))),(0,a.kt)("h4",{id:"static-semantics"},"Static Semantics"),(0,a.kt)("p",null,"The library package Decimal has the following declaration: "),(0,a.kt)(l.Z,{mdxType:"CodeBlock"},"{","AI12-0414-1","}"," package Ada.Decimal","\n","   with Pure is","\n"),(0,a.kt)(l.Z,{mdxType:"CodeBlock"},"Max_Scale : constant := implementation-defined;","\n","   Min_Scale : constant := implementation-defined;","\n"),(0,a.kt)(l.Z,{mdxType:"CodeBlock"},"Min_Delta : constant := 10.0**(-Max_Scale);","\n","   Max_Delta : constant := 10.0**(-Min_Scale);","\n"),(0,a.kt)(l.Z,{mdxType:"CodeBlock"},"Max_Decimal_Digits : constant := implementation-defined;","\n"),(0,a.kt)(l.Z,{mdxType:"CodeBlock"},"{","AI05-0229-1","}","    generic","\n","      type Dividend_Type  is delta ","<",">"," digits ","<",">",";","\n","      type Divisor_Type   is delta ","<",">"," digits ","<",">",";","\n","      type Quotient_Type  is delta ","<",">"," digits ","<",">",";","\n","      type Remainder_Type is delta ","<",">"," digits ","<",">",";","\n","   procedure Divide (Dividend  : in Dividend_Type;","\n","                     Divisor   : in Divisor_Type;","\n","                     Quotient  : out Quotient_Type;","\n","                     Remainder : out Remainder_Type)","\n","      with Convention =",">"," Intrinsic;","\n"),(0,a.kt)(l.Z,{mdxType:"CodeBlock"},"end Ada.Decimal;","\n"),(0,a.kt)("p",null,(0,a.kt)("strong",null,"Implementation defined: "),"The values of named numbers in the package Decimal."),(0,a.kt)("p",null,"Max_Scale is the largest N such that 10.0**(N) is allowed as a decimal type's delta. Its type is ",(0,a.kt)("em",null,"universal_integer"),"."),(0,a.kt)("p",null,"Min_Scale is the smallest N such that 10.0**(N) is allowed as a decimal type's delta. Its type is ",(0,a.kt)("em",null,"universal_integer"),"."),(0,a.kt)("p",null,"Min_Delta is the smallest value allowed for ",(0,a.kt)("em",null,"delta")," in a ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-3.5#S0049"},"decimal_fixed_point_definition")),". Its type is ",(0,a.kt)("em",null,"universal_real"),"."),(0,a.kt)("p",null,"Max_Delta is the largest value allowed for ",(0,a.kt)("em",null,"delta")," in a ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-3.5#S0049"},"decimal_fixed_point_definition")),". Its type is ",(0,a.kt)("em",null,"universal_real"),"."),(0,a.kt)("p",null,"Max_Decimal_Digits is the largest value allowed for ",(0,a.kt)("em",null,"digits")," in a ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"./AA-3.5#S0049"},"decimal_fixed_point_definition")),". Its type is ",(0,a.kt)("em",null,"universal_integer"),". "),(0,a.kt)("p",null,(0,a.kt)("strong",null,"Reason: "),"The name is Max_Decimal_Digits versus Max_Digits, in order to avoid confusion with the named number System.Max_Digits relevant to floating point. "),(0,a.kt)("h4",{id:"static-semantics-1"},"Static Semantics"),(0,a.kt)("p",null,"The effect of Divide is as follows. The value of Quotient is Quotient_Type(Dividend/Divisor). The value of Remainder is Remainder_Type(Intermediate), where Intermediate is the difference between Dividend and the product of Divisor and Quotient; this result is computed exactly. "),(0,a.kt)("h4",{id:"implementation-requirements"},"Implementation Requirements"),(0,a.kt)("p",null,"Decimal.Max_Decimal_Digits shall be at least 18."),(0,a.kt)("p",null,"Decimal.Max_Scale shall be at least 18."),(0,a.kt)("p",null,"Decimal.Min_Scale shall be at most 0. "),(0,a.kt)("p",null,"NOTE 1   The effect of division yielding a quotient with control over rounding versus truncation is obtained by applying either the function attribute Quotient_Type'Round or the conversion Quotient_Type to the expression Dividend/Divisor. "))}u.isMDXComponent=!0}}]);