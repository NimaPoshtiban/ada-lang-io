"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[2796],{1716:(e,a,n)=>{n.d(a,{Zo:()=>s,kt:()=>m});var t=n(6687);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=t.createContext({}),p=function(e){var a=t.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):c(c({},a),e)),n},s=function(e){var a=p(e.components);return t.createElement(i.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,f=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?t.createElement(f,c(c({ref:a},s),{},{components:n})):t.createElement(f,c({ref:a},s))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=u;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var p=2;p<o;p++)c[p]=n[p];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8988:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var t=n(9440),r=(n(6687),n(1716));const o={sidebar_position:101},c="12.8  Example of a Generic Package",l={unversionedId:"arm/AA-12.8",id:"arm/AA-12.8",title:"12.8  Example of a Generic Package",description:"The following example provides a possible formulation of stacks by means of a generic package. The size of each stack and the type of the stack elements are provided as generic formal parameters.",source:"@site/docs/arm/AA-12.8.md",sourceDirName:"arm",slug:"/arm/AA-12.8",permalink:"/docs/arm/AA-12.8",draft:!1,tags:[],version:"current",sidebarPosition:101,frontMatter:{sidebar_position:101},sidebar:"tutorialSidebar",previous:{title:"12.7  Formal Packages",permalink:"/docs/arm/AA-12.7"},next:{title:"13 Representation Issues",permalink:"/docs/arm/AA-13"}},i={},p=[{value:"Examples",id:"examples",level:4}],s={toc:p};function d(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},s,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"128--example-of-a-generic-package"},"12.8  Example of a Generic Package"),(0,r.kt)("p",null,"The following example provides a possible formulation of stacks by means of a generic package. The size of each stack and the type of the stack elements are provided as generic formal parameters. "),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("p",null,"This paragraph was deleted."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"generic\n   Size : Positive;\n   type Item is private;\npackage Stack is\n   procedure Push(E : in  Item);\n   procedure Pop (E : out Item);\n   Overflow, Underflow : exception;\nend Stack;\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"package body Stack is\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"   type Table is array (Positive range &lt&gt) of Item;\n   Space : Table(1 .. Size);\n   Index : Natural := 0;\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"   procedure Push(E : in Item) is\n   begin\n      if Index &gt= Size then\n         raise Overflow;\n      end if;\n      Index := Index + 1;\n      Space(Index) := E;\n   end Push;\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"   procedure Pop(E : out Item) is\n   begin\n      if Index = 0 then\n         raise Underflow;\n      end if;\n      E := Space(Index);\n      Index := Index - 1;\n   end Pop;\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"end Stack;\n\n")),(0,r.kt)("p",null,"Instances of this generic package can be obtained as follows: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"package Stack_Int  is new Stack(Size =&gt 200, Item =&gt Integer);\npackage Stack_Bool is new Stack(100, Boolean);\n\n")),(0,r.kt)("p",null,"Thereafter, the procedures of the instantiated packages can be called as follows: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"Stack_Int.Push(N);\nStack_Bool.Push(True);\n\n")),(0,r.kt)("p",null,"Alternatively, a generic formulation of the type Stack can be given as follows (package body omitted): "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"generic\n   type Item is private;\npackage On_Stacks is\n   type Stack(Size : Positive) is limited private;\n   procedure Push(S : in out Stack; E : in  Item);\n   procedure Pop (S : in out Stack; E : out Item);\n   Overflow, Underflow : exception;\nprivate\n   type Table is array (Positive range &lt&gt) of Item;\n   type Stack(Size : Positive) is\n      record\n         Space : Table(1 .. Size);\n         Index : Natural := 0;\n      end record;\nend On_Stacks;\n\n")),(0,r.kt)("p",null,"In order to use such a package, an instance has to be created and thereafter stacks of the corresponding type can be declared: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ada"},"declare\n   package Stack_Real is new On_Stacks(Real); use Stack_Real;\n   S : Stack(100);\nbegin\n   ...\n   Push(S, 2.54);\n   ...\nend;\n\n")))}d.isMDXComponent=!0}}]);