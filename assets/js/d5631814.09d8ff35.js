"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[1805],{4454:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>h,default:()=>y,frontMatter:()=>p,metadata:()=>k,toc:()=>A});var a=n(1716),o=n(9464),i=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&u(e,n,t[n]);if(s)for(var n of s(t))m.call(t,n)&&u(e,n,t[n]);return e};const p={sidebar_position:157},h="D.6 Preemptive Abort",k={unversionedId:"arm/AA-D/AA-D.6",id:"arm/AA-D/AA-D.6",title:"D.6 Preemptive Abort",description:"We're still working on the Reference manual output.  Internal links are broken,",source:"@site/docs/arm/AA-D/AA-D.6.mdx",sourceDirName:"arm/AA-D",slug:"/arm/AA-D/AA-D.6",permalink:"/docs/arm/AA-D/AA-D.6",draft:!1,tags:[],version:"current",sidebarPosition:157,frontMatter:{sidebar_position:157},sidebar:"referenceManualSidebar",previous:{title:"D.5 Dynamic Priorities",permalink:"/docs/arm/AA-D/AA-D.5"},next:{title:"D.7 Tasking Restrictions",permalink:"/docs/arm/AA-D/AA-D.7"}},b={},A=[{value:"Dynamic Semantics",id:"dynamic-semantics",level:4},{value:"Documentation Requirements",id:"documentation-requirements",level:4},{value:"Metrics",id:"metrics",level:4},{value:"Implementation Advice",id:"implementation-advice",level:4}],f={toc:A};function y(e){var t,n=e,{components:i}=n,u=((e,t)=>{var n={};for(var a in e)c.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&s)for(var a of s(e))t.indexOf(a)<0&&m.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=d(d({},f),u),r(t,l({components:i,mdxType:"MDXLayout"}))),(0,a.kt)("h1",d({},{id:"d6-preemptive-abort"}),"D.6 Preemptive Abort"),(0,a.kt)("admonition",d({},{type:"warning"}),(0,a.kt)("p",{parentName:"admonition"},"We're still working on the Reference manual output.  Internal links are broken,\nas are a bunch of other things.\nSee the ",(0,a.kt)("a",d({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,a.kt)("p",null,"{",(0,a.kt)("em",null,"AI05-0299-1"),"}"," [This subclause specifies requirements on the immediacy with which an aborted construct is completed.] ",(0,a.kt)("br",null)),(0,a.kt)("h4",d({},{id:"dynamic-semantics"}),"Dynamic Semantics"),(0,a.kt)("p",null,"On a system with a single processor, an aborted construct is completed immediately at the first point that is outside the execution of an abort-deferred operation.",(0,a.kt)("br",null)),(0,a.kt)("h4",d({},{id:"documentation-requirements"}),"Documentation Requirements"),(0,a.kt)("p",null,"On a multiprocessor, the implementation shall document any conditions that cause the completion of an aborted construct to be delayed later than what is specified for a single processor. ",(0,a.kt)("br",null)),(0,a.kt)(o.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},(0,a.kt)("em",null,"This paragraph was deleted."),(0,a.kt)("br",null)),(0,a.kt)(o.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},(0,a.kt)("strong",null,"Documentation Requirement: "),"On a multiprocessor, any conditions that cause the completion of an aborted construct to be delayed later than what is specified for a single processor.",(0,a.kt)("br",null)),(0,a.kt)("h4",d({},{id:"metrics"}),"Metrics"),(0,a.kt)("p",null,"The implementation shall document the following metrics: ",(0,a.kt)("br",null)),(0,a.kt)("p",null,"The execution time, in processor clock cycles, that it takes for an ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-9/AA-9.8#S0284"},"abort_statement"))," to cause the completion of the aborted task. This is measured in a situation where a task T2 preempts task T1 and aborts T1. T1 does not have any finalization code. T2 shall verify that T1 has terminated, by means of the Terminated attribute.",(0,a.kt)("br",null)),(0,a.kt)("p",null,"On a multiprocessor, an upper bound in seconds, on the time that the completion of an aborted task can be delayed beyond the point that it is required for a single processor.",(0,a.kt)("br",null)),(0,a.kt)("p",null,"{",(0,a.kt)("em",null,"AI95-00114-01"),"}"," An upper bound on the execution time of an ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-9/AA-9.7#S0280"},"asynchronous_select")),", in processor clock cycles. This is measured between a point immediately before a task T1 executes a protected operation Pr.Set that makes the ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-4/AA-4.5#S0150"},"condition"))," of an ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-9/AA-9.5#S0262"},"entry_barrier"))," Pr.Wait True, and the point where task T2 resumes execution immediately after an entry call to Pr.Wait in an ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-9/AA-9.7#S0280"},"asynchronous_select")),". T1 preempts T2 while T2 is executing the abortable part, and then blocks itself so that T2 can execute. The execution time of T1 is measured separately, and subtracted.",(0,a.kt)("br",null)),(0,a.kt)("p",null,"An upper bound on the execution time of an ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-9/AA-9.7#S0280"},"asynchronous_select")),", in the case that no asynchronous transfer of control takes place. This is measured between a point immediately before a task executes the ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-9/AA-9.7#S0280"},"asynchronous_select"))," with a nonnull abortable part, and the point where the task continues execution immediately after it. The execution time of the abortable part is subtracted. ",(0,a.kt)("br",null)),(0,a.kt)(o.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},(0,a.kt)("strong",null,"Documentation Requirement: "),"The metrics for aborts.",(0,a.kt)("br",null)),(0,a.kt)("h4",d({},{id:"implementation-advice"}),"Implementation Advice"),(0,a.kt)("p",null,"Even though the ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-9/AA-9.8#S0284"},"abort_statement"))," is included in the list of potentially blocking operations (see 9.5.1), it is recommended that this statement be implemented in a way that never requires the task executing the ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-9/AA-9.8#S0284"},"abort_statement"))," to block.",(0,a.kt)("br",null)),(0,a.kt)(o.Z,{type:"aarm",aarm:"implementation-advice",title:"Implementation Advice",mdxType:"Admonition"},(0,a.kt)("strong",null),"The ",(0,a.kt)("code",null,(0,a.kt)("a",{href:"../AA-9/AA-9.8#S0284"},"abort_statement"))," should not require the task executing the statement to block.",(0,a.kt)("br",null)),(0,a.kt)("p",null,"On a multi-processor, the delay associated with aborting a task on another processor should be bounded; the implementation should use periodic polling, if necessary, to achieve this.",(0,a.kt)("br",null)),(0,a.kt)(o.Z,{type:"aarm",aarm:"implementation-advice",title:"Implementation Advice",mdxType:"Admonition"},(0,a.kt)("strong",null),"On a multi-processor, the delay associated with aborting a task on another processor should be bounded.",(0,a.kt)("br",null)),(0,a.kt)(o.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},"NOTE 1   Abortion does not change the active or base priority of the aborted task.",(0,a.kt)("br",null)),(0,a.kt)(o.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},"NOTE 2   Abortion cannot be more immediate than is allowed by the rules for deferral of abortion during finalization and in protected actions.",(0,a.kt)("br",null)))}y.isMDXComponent=!0}}]);