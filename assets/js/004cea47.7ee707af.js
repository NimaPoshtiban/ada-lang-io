"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[6625],{1565:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>f,contentTitle:()=>b,default:()=>x,frontMatter:()=>A,metadata:()=>k,toc:()=>g});var n=a(1716),r=a(2787),o=a(2670),i=a(6990),l=Object.defineProperty,s=Object.defineProperties,u=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(t,e,a)=>e in t?l(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,y=(t,e)=>{for(var a in e||(e={}))d.call(e,a)&&c(t,a,e[a]);if(m)for(var a of m(e))p.call(e,a)&&c(t,a,e[a]);return t};const A={sidebar_position:48},b="6 Subprograms",k={unversionedId:"arm/AA-6/AA-6",id:"arm/AA-6/AA-6",title:"6 Subprograms",description:"This Reference Manual output has not been verified,",source:"@site/docs/arm/AA-6/AA-6.mdx",sourceDirName:"arm/AA-6",slug:"/arm/AA-6/",permalink:"/docs/arm/AA-6/",draft:!1,tags:[],version:"current",sidebarPosition:48,frontMatter:{sidebar_position:48},sidebar:"referenceManualSidebar",previous:{title:"5.8 Goto Statements",permalink:"/docs/arm/AA-5/AA-5.8"},next:{title:"6.1 Subprogram Declarations",permalink:"/docs/arm/AA-6/AA-6.1"}},f={},g=[],h={toc:g};function x(t){var e,a=t,{components:l}=a,c=((t,e)=>{var a={};for(var n in t)d.call(t,n)&&e.indexOf(n)<0&&(a[n]=t[n]);if(null!=t&&m)for(var n of m(t))e.indexOf(n)<0&&p.call(t,n)&&(a[n]=t[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(e=y(y({},h),c),s(e,u({components:l,mdxType:"MDXLayout"}))),(0,n.kt)("h1",y({},{id:"6-subprograms"}),"6 Subprograms"),(0,n.kt)("admonition",y({},{type:"warning"}),(0,n.kt)("p",{parentName:"admonition"},"This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,n.kt)("a",y({parentName:"p"},{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20"}),"tracking issue"))),(0,n.kt)(o.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(i.Z,{mdxType:"MarginText"},"1")),(0,n.kt)("p",null,"A subprogram is a program unit or intrinsic operation whose execution is invoked by a subprogram call. There are two forms of subprogram: procedures and functions. A procedure call is a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-5/AA-5.1#S0167"},"statement")),"; a function call is an expression and returns a value. The definition of a subprogram can be given in two parts: a subprogram declaration defining its interface, and a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-6/AA-6.3#S0216"},"subprogram_body"))," defining its execution. [Operators and enumeration literals are functions.] ",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(i.Z,{mdxType:"MarginText"},"1.a")),(0,n.kt)(r.Z,{type:"aarm",aarm:"note",title:"Note: ",mdxType:"Admonition"},(0,n.kt)("strong",null,"To be honest: "),"A function call is an expression, but more specifically it is a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-4/AA-4.1#S0091"},"name")),". ",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(i.Z,{mdxType:"MarginText"},"1.b/2")),(0,n.kt)(r.Z,{type:"aarm",aarm:"glossary-entry",title:"Glossary entry: ",mdxType:"Admonition"},(0,n.kt)("strong",null),"A subprogram is a section of a program that can be executed in various contexts. It is invoked by a subprogram call that may qualify the effect of the subprogram through the passing of parameters. There are two forms of subprograms: functions, which return values, and procedures, which do not.",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(i.Z,{mdxType:"MarginText"},"1.c/2")),(0,n.kt)(r.Z,{type:"aarm",aarm:"glossary-entry",title:"Glossary entry: ",mdxType:"Admonition"},(0,n.kt)("strong",null),"A function is a form of subprogram that returns a result and can be called as part of an expression.",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(i.Z,{mdxType:"MarginText"},"1.d/2")),(0,n.kt)(r.Z,{type:"aarm",aarm:"glossary-entry",title:"Glossary entry: ",mdxType:"Admonition"},(0,n.kt)("strong",null),"A procedure is a form of subprogram that does not return a result and can only be called by a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-5/AA-5.1#S0167"},"statement")),".",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(i.Z,{mdxType:"MarginText"},"2")),(0,n.kt)(o.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(i.Z,{mdxType:"MarginText"},"3/3")),(0,n.kt)("p",null,"{",(0,n.kt)("em",null,"AI05-0299-1"),"}"," ",(0,n.kt)("br",null),"A ",(0,n.kt)("em",null,"callable entity")," is a subprogram or entry (see Section 9). A callable entity is invoked by a ",(0,n.kt)("em",null,"call"),"; that is, a subprogram call or entry call. A ",(0,n.kt)("em",null,"callable construct")," is a construct that defines the action of a call upon a callable entity: a ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-6/AA-6.3#S0216"},"subprogram_body")),", ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-9/AA-9.5#S0260"},"entry_body")),", or ",(0,n.kt)("code",null,(0,n.kt)("a",{href:"../AA-9/AA-9.5#S0258"},"accept_statement")),". ",(0,n.kt)("br",null)),(0,n.kt)(o.Z,{mdxType:"AnnotatedOnly"},(0,n.kt)(i.Z,{mdxType:"MarginText"},"3.a")),(0,n.kt)(r.Z,{type:"aarm",aarm:"ramification",title:"Ramification: ",mdxType:"Admonition"},(0,n.kt)("strong",null),'Note that "callable entity" includes predefined operators, enumeration literals, and abstract subprograms. "Call" includes calls of these things. They do not have callable constructs, since they don\'t have completions. ',(0,n.kt)("br",null)))}x.isMDXComponent=!0}}]);